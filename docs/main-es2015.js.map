{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/animation/animation.component.ts","./src/app/animation/animation.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/ctc/ctc.component.ts","./src/app/ctc/ctc.component.html","./src/app/dbt-screen/dbt-screen.component.ts","./src/app/dbt-screen/dbt-screen.component.html","./src/app/element/element.component.ts","./src/app/element/element.component.html","./src/app/excel-upload/excel-upload.component.ts","./src/app/excel-upload/excel-upload.component.html","./src/app/frame/frame.component.ts","./src/app/frame/frame.component.html","./src/app/grade/grade.component.ts","./src/app/grade/grade.component.html","./src/app/mapping/mapping.component.ts","./src/app/month-payroll-report/month-payroll-report.component.ts","./src/app/month-payroll-report/month-payroll-report.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/ng-class/ng-class.component.ts","./src/app/photos-shower/photos-shower.component.ts","./src/app/photos-shower/photos-shower.component.html","./src/app/region-master/region-master.component.ts","./src/app/region-master/region-master.component.html","./src/app/segment-add/segment-add.component.ts","./src/app/segment-add/segment-add.component.html","./src/app/segment-master/segment-master.component.ts","./src/app/segment-master/segment-master.component.html","./src/app/services/login-service.service.ts","./src/app/shared.service.ts","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/app/user-login/user-login.component.ts","./src/app/user-login/user-login.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-animation',\n  templateUrl: './animation.component.html',\n  styleUrls: ['./animation.component.scss']\n})\nexport class AnimationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <p>animation works!</p> -->\n<!-- box animation -->\n<div class=\"main\">\n    <div class=\"box\">\n\n    </div>\n</div>\n<!-- balloon animation -->\n<!-- <div class=\"whole\">\n    <div class=\"baloon1\">\n        <div class=\"baloonTop1\"></div>\n        <div class=\"baloondown1\">\n            <div class=\"baloonLine1\">\n                \n            </div>\n        </div>\n    </div>\n    <div class=\"baloon2\">\n        <div class=\"baloonTop2\"></div>\n        <div class=\"baloondown2\">\n            <div class=\"baloonLine2\">\n                \n            </div>\n        </div>\n    </div>\n    <div class=\"baloon3\">\n        <div class=\"baloonTop3\"></div>\n        <div class=\"baloondown3\">\n            <div class=\"baloonLine3\">\n                \n            </div>\n        </div>\n    </div>\n    <div class=\"baloon4\">\n        <div class=\"baloonTop4\"></div>\n        <div class=\"baloondown4\">\n            <div class=\"baloonLine4\">\n                \n            </div>\n        </div>\n    </div>\n</div> -->\n<!-- Ball animation -->\n<!-- <div class=\"Ball_background\">\n    <div class=\"ball\">\n        \n    </div>\n</div> -->\n<!-- Small Ball -->\n<!-- <div class=\"Flex\">\n    <div class=\"Small_ball1 Small_ball\"></div>\n    <div class=\"Small_ball2 Small_ball\"></div>\n    <div class=\"Small_ball3 Small_ball\"></div>\n    <div class=\"Small_ball4 Small_ball\"></div>\n    <div class=\"Small_ball5 Small_ball\"></div>\n    <div class=\"Small_ball6 Small_ball\"></div>\n    <div class=\"Small_ball7 Small_ball\"></div>\n    <div class=\"Small_ball8 Small_ball\"></div>\n    <div class=\"Small_ball9 Small_ball\"></div>\n    <div class=\"Small_ball10 Small_ball\"></div>\n</div> -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SegmentMasterComponent } from './segment-master/segment-master.component';\nimport { AppComponent } from './app.component';\nimport { MappingComponent } from './mapping/mapping.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { NavComponent } from './nav/nav.component';\nimport { GradeComponent } from './grade/grade.component';\nimport { ExcelUploadComponent } from './excel-upload/excel-upload.component';\n\n\nconst routes: Routes = [\n  {path:'SegmentMaster',component:SegmentMasterComponent},\n  {path:'d',component:UserLoginComponent},\n  {path:'UserLogin',component:UserLoginComponent},\n  {path:'nav',component:NavComponent},\n  {path:'mapping',component:MappingComponent},\n  {path:'',component:GradeComponent},\n  {path:'excel',component:ExcelUploadComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'vsolvSample';\n}\n","<!-- <router-outlet></router-outlet> -->\n<!-- <app-test></app-test> -->\n<!-- <app-frame></app-frame> -->\n<!-- <app-animation></app-animation> -->\n<!-- <app-ng-class></app-ng-class> -->\n<!-- <app-grade></app-grade>\n<app-excel-upload></app-excel-upload> -->\n<!-- <router-outlet></router-outlet> -->\n<app-region-master></app-region-master>\n<!-- <app-element></app-element> -->\n<!-- <app-month-payroll-report></app-month-payroll-report> -->\n<!-- <app-photos-shower></app-photos-shower> -->\n<!-- <app-dbt-screen></app-dbt-screen> -->\n<!-- <app-chartt></app-chartt> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SegmentMasterComponent } from './segment-master/segment-master.component';\nimport { SegmentAddComponent } from './segment-add/segment-add.component';\nimport { MappingComponent } from './mapping/mapping.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,  ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { GradeComponent } from './grade/grade.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatSelectModule} from '@angular/material/select';\nimport { CTCComponent } from './ctc/ctc.component';\nimport { TestComponent } from './test/test.component';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MonthPayrollReportComponent } from './month-payroll-report/month-payroll-report.component';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FrameComponent } from './frame/frame.component';\nimport { AnimationComponent } from './animation/animation.component';\nimport { NgClassComponent } from './ng-class/ng-class.component';\nimport { ExcelUploadComponent } from './excel-upload/excel-upload.component';\nimport { RegionMasterComponent } from './region-master/region-master.component';\nimport { ElementComponent } from './element/element.component';\nimport { PhotosShowerComponent } from './photos-shower/photos-shower.component';\nimport { DbtScreenComponent } from './dbt-screen/dbt-screen.component';\n// import { CharttComponent } from './chartt/chartt.component';\n// import { HomeComponent } from './home/home.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    SegmentMasterComponent,\n    SegmentAddComponent,\n    MappingComponent,\n    UserLoginComponent,\n    NavComponent,\n    GradeComponent,\n    CTCComponent,\n    TestComponent,\n    MonthPayrollReportComponent,\n    FrameComponent,\n    AnimationComponent,\n    NgClassComponent,\n    RegionMasterComponent,\n    ExcelUploadComponent,\n    ElementComponent,\n    PhotosShowerComponent,\n    DbtScreenComponent,\n    // CharttComponent,\n    // HomeComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,MatSliderModule,MatSelectModule,MatAutocompleteModule,MatCheckboxModule,MatChipsModule,MatDatepickerModule,MatNativeDateModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ctc',\n  templateUrl: './ctc.component.html',\n  styleUrls: ['./ctc.component.scss']\n})\nexport class CTCComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  foods= [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n  hide:boolean=false\n  Gross(){\n    this.hide=true\n  }\n}\n","<div class=\"container mt-5\">\n    <!-- <div class=\"form-group col-12\">\n        <input type=\"text\" name=\"\" id=\"\" placeholder=\"TakeHome\" class=\"form-control col-3\">\n    </div>\n    <div class=\"col-12 d-flex\">\n        <input type=\"text\" placeholder=\"CTC\" class=\"form-control col-3\">\n        <span class=\"col-1\"></span>\n        <label for=\"\" class=\"col-3 text-center\">Monthly</label>\n        <span class=\"col-1\"></span>\n        <label for=\"\" class=\"col-3 text-center\">Yearly</label>\n    </div> -->\n    <div class=\"col-12 name\">\n        R. SELVAKUMAR's Pay Structure\n    </div>\n    <div class=\"col-12 mt-5 row\">\n        <div class=\"col-4\">\n            <!-- <h4>Basic mat-select</h4> -->\n            <mat-form-field appearance=\"outline\" class=\"col-12\">\n            <mat-label>Favorite food</mat-label>\n            <mat-select>\n                <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                {{food.viewValue}}\n                </mat-option>\n            </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"col-4\">\n            <!-- <h4>Basic mat-select</h4> -->\n            <mat-form-field appearance=\"outline\" class=\"col-12\">\n            <mat-label>Favorite food</mat-label>\n            <mat-select>\n                <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                {{food.viewValue}}\n                </mat-option>\n            </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"col-4\">\n            <!-- <h4>Basic mat-select</h4> -->\n            <mat-form-field appearance=\"outline\" class=\"col-12\">\n            <mat-label>Favorite food</mat-label>\n            <mat-select>\n                <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                {{food.viewValue}}\n                </mat-option>\n            </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"container \" >\n        <form action=\"\">\n        <!-- <table class=\"table \" style=\"height:50px\" >\n            <thead class=\"bg-dark text-light\">\n                <th>SALARY COMPONENTS\n                </th>\n                <th>CALCULATION</th>\n                <th>\n                    MONTHLY</th>\n                <th>\n                        YEARLY</th>\n            </thead>\n            <tbody class=\"body \">\n                <tr>\n                    <td>Take Home</td>\n                    <td></td>\n                    <td>\n                        <mat-form-field appearance=\"outline\">\n                            <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                        </mat-form-field>\n                    </td>\n                    <td>\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td >Gross Remuneration</td>\n                    <td></td>\n                    <td>\n                        <mat-form-field appearance=\"outline\">\n                            <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                        </mat-form-field>\n                    </td>\n                    <td>\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                        </mat-form-field>\n                    </td>\n                </tr>\n                \n            </tbody>\n        </table> -->\n        <div class=\"row col-12 border d-flex align-items-center bg-dark text-light\" style=\"height: 50px;\">\n            <div class=\"col-3\">SALARY COMPONENTS</div>\n            <div class=\"col-3\">\n                CALCULATION</div>\n            <div class=\"col-3\">MONTHLY</div>\n            <div class=\"col-3\">\n                YEARLY</div>\n        </div>\n        <div class=\"row col-12 d-flex align-items-center skyblue\">\n            <div class=\"col-3\">Task Home</div>\n            <div class=\"col-3\">\n                </div>\n            <div class=\"col-3\">\n                <mat-form-field appearance=\"outline\">\n                    <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                </mat-form-field>\n            </div>\n            <div class=\"col-3\">\n                <mat-form-field appearance=\"outline\">\n                    <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row col-12 d-flex align-items-center skyblue\">\n            <div class=\"col-3\" style=\"cursor: pointer;\" (click)=\"Gross()\">Gross Remuneration</div>\n            <div class=\"col-3\">\n                </div>\n            <div class=\"col-3\">\n                <mat-form-field appearance=\"outline\">\n                    <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                </mat-form-field>\n            </div>\n            <div class=\"col-3\">\n                <mat-form-field appearance=\"outline\">\n                    <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                </mat-form-field>\n            </div>\n\n        </div>\n        <div *ngIf=\"hide\">\n            <div class=\"row col-12 d-flex align-items-center skyblue\">\n                <div class=\"col-3\">1</div>\n                <div class=\"col-3\">\n                    </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n    \n            </div>\n            <div class=\"row col-12 d-flex align-items-center skyblue\">\n                <div class=\"col-3\">2</div>\n                <div class=\"col-3\">\n                    </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n    \n            </div>\n            <div class=\"row col-12 d-flex align-items-center skyblue\">\n                <div class=\"col-3\">3</div>\n                <div class=\"col-3\">\n                    </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right; \"formControlName=\"\">\n                    </mat-form-field>\n                </div>\n    \n            </div>\n            <div class=\"row col-12 d-flex align-items-center skyblue\">\n                <div class=\"col-3\">4</div>\n                <div class=\"col-3\">\n                    </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n    \n            </div>\n        </div>\n    </form>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dbt-screen',\n  templateUrl: './dbt-screen.component.html',\n  styleUrls: ['./dbt-screen.component.scss']\n})\nexport class DbtScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\">\n    <div class=\"screen\">\n        <div class=\"left\"></div>\n        <div class=\"right\">\n            <div class=\"rightTop\">\n                <h2 class=\"text-center\">Department Of Agriculture</h2>\n                <h2 class=\"text-center\">Puducherry</h2>\n            </div>\n            <div class=\"rightBottom\">\n                <div class=\"SignIn\">Sign in</div>\n                <div class=\"TypeSmall\">Type your name and password to sign in</div>\n                <div>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>UserName</mat-label>\n                        <input matInput>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Password</mat-label>\n                        <input matInput>\n                    </mat-form-field>\n                </div>\n                <div>forgot</div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-element',\n  templateUrl: './element.component.html',\n  styleUrls: ['./element.component.scss']\n})\nexport class ElementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div >\n    <div class=\"row ml-4\">\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>Contractor Name\n                </mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>Code</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>Region</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>Taluk</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>District</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>Pan No</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>GST</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div> \n        <div class=\"col-md-2\">\n            <mat-form-field class=\"dataWidth\">\n                <mat-label>\n                    Month\n                </mat-label>\n                <input matInput format [matDatepicker]=\"picker\" placeholder=\"Choose a date\" formControlName=\"logDate\" >\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-outline-primary bRadius\">\n                <i class=\"fa fa-search\"></i>\n            </button>\n        </div>\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-outline-primary bRadius\">\n                search\n            </button>\n        </div>\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-outline-primary bRadius\">\n                Download\n            </button>\n        </div>\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-outline-primary bRadius\">\n                Upload\n            </button>\n        </div>\n    </div>\n   <div class=\"table-responsive ml-4\">\n     <table class=\"table table-bordered\">\n        <thead>\n            <th>Sno</th>\n            <th>Contractor Code and Name</th>\n            <th>Month</th>\n            <th>Amount</th>\n            <th>District</th>\n            <th>Region</th>\n            <th>Taluk</th>\n            <th>Pan</th>\n            <th>GST</th>\n            <th>Action</th>\n            <th class=\"checkBox\">Bulk <span ><input type=\"checkbox\"></span></th>\n        </thead>\n        <tbody>\n            <tr>\n                <td>\n                  <mat-form-field >\n                    <mat-label>Employee</mat-label>\n                    <input matInput placeholder=\"employee\"  autocomplete=\"off\"\n                      readonly=\"true\">\n                  </mat-form-field>\n\n                </td>\n                <td>\n                  <!-- <mat-form-field>\n                    <mat-label>PayComponent Type</mat-label>\n                    <mat-select > -->\n                      <!-- <mat-option *ngFor=\"let type of paycomponent_arrays\" [value]=\"type.id\">\n                        {{type.name}}\n                      </mat-option> -->\n                    <!-- </mat-select>\n\n                  </mat-form-field> -->\n                  <mat-form-field >\n                    <mat-label>Employee</mat-label>\n                    <input matInput placeholder=\"employee\"  autocomplete=\"off\"\n                      readonly=\"true\">\n                  </mat-form-field>\n                </td>\n\n                <td>\n                  <mat-form-field>\n                    <mat-label>Active Date</mat-label>\n                    <input matInput [matDatepicker]=\"picker35\" >\n                    <mat-datepicker-toggle matSuffix [for]=\"picker35\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker35></mat-datepicker>\n                  </mat-form-field>\n                </td>\n                <td>\n                    <mat-form-field>\n                        <mat-label>Amount</mat-label>\n                        <input matInput placeholder=\"amount\"  autocomplete=\"off\">\n    \n                      </mat-form-field>\n                </td>\n\n                <td>\n                  <mat-form-field>\n                    <mat-label>Amount</mat-label>\n                    <input matInput placeholder=\"amount\"  autocomplete=\"off\" readonly=\"true\">\n\n                  </mat-form-field>\n                </td>\n                <td>\n                    <mat-form-field>\n                      <mat-label>Amount</mat-label>\n                      <input matInput placeholder=\"amount\"  autocomplete=\"off\" readonly=\"true\">\n  \n                    </mat-form-field>\n                  </td>\n                  <td>\n                    <mat-form-field>\n                      <mat-label>Amount</mat-label>\n                      <input matInput placeholder=\"amount\"  autocomplete=\"off\" readonly=\"true\">\n  \n                    </mat-form-field>\n                  </td>\n                  <td>\n                    <mat-form-field>\n                      <mat-label>Amount</mat-label>\n                      <input matInput placeholder=\"amount\"  autocomplete=\"off\" readonly=\"true\">\n  \n                    </mat-form-field>\n                  </td>\n                  <td>\n                    <mat-form-field>\n                      <mat-label>Amount</mat-label>\n                      <input matInput placeholder=\"amount\"  autocomplete=\"off\" readonly=\"true\">\n  \n                    </mat-form-field>\n                  </td>\n                  <td>\n                     <i fa-solid fa-pencil></i>\n                  </td>\n                  <td>\n                    <input type=\"checkbox\" name=\"\" id=\"\">\n                  </td>\n              </tr>\n        </tbody>\n     </table>\n   </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport * as XLSX from 'xlsx';\nimport { SharedService } from '../shared.service';\ntype AA=any[][];\n@Component({\n  selector: 'app-excel-upload',\n  templateUrl: './excel-upload.component.html',\n  styleUrls: ['./excel-upload.component.scss']\n})\n\nexport class ExcelUploadComponent implements OnInit {\n  data:any;\n  tableData: any;\n  tableTitle: string[];\n  tableRecords: any;\n\n  constructor(private shared:SharedService) { }\n  @ViewChild('labelImport')  labelImport: ElementRef;\n  name:any\n  ngOnInit(): void {\n    this.name=this.shared.emp.value\n    alert(this.name)\n  }\n  images:any\n  uploadForms:FormGroup;\n//   fileChange(file, files:FileList) {\n//     const target: DataTransfer = <DataTransfer>(<unknown>file.target);\n//     const filess:FileList=file.target.files\n//     this.labelImport.nativeElement.innerText = Array.from(filess)\n//     .map(f => f.name)\n//     .join(', ');\n//     this.images = file.target.files;\n  \n\n//     const reader: FileReader = new FileReader();\n//     reader.readAsBinaryString(this.images[0]);\n//     reader.onload = (e: any) => {\n//       /* read workbook */\n//       const bstr: string = e.target.result;\n//       const wb = XLSX.read(bstr, { type: 'binary' });\n//       // const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n\n//       /* grab first sheet */\n//       const wsname: string = wb.SheetNames[0];\n//       const ws = wb.Sheets[wsname];\n//       // const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n//       /* save data */\n//       this.data =(XLSX.utils.sheet_to_json(ws, { header: 1 }));\n//       console.log(this.data);\n//     console.log('Images',this.images)\n//     this.tableData = this.data;\n//       this.tableTitle = Object.keys(this.tableData[0]);\n//       this.tableRecords = this.tableData.slice(\n//         this.pageStartCount,\n//         this.pageEndCount\n//       );\n      \n//   }\n\n// }\nfileChange(file, files:FileList) {\n  const read=new FileReader()\n  read.readAsBinaryString(file.target.files[0])\n  read.onload=(e)=>{\n    const blob=e.target.result\n    const BlobRead=XLSX.read(blob,{type:'binary'})\n    const SheetNames=BlobRead.SheetNames[0]\n    const Sheets=BlobRead.Sheets[SheetNames]\n    this.data=XLSX.utils.sheet_to_json(Sheets,{header:1})\n\n  }\n  this.labelImport.nativeElement.innerText=Array.from(files).map(f=>f.name)\n}\n  pageEndCount(pageStartCount: (pageStartCount: any, pageEndCount: any) => any, pageEndCount: any): any {\n    throw new Error('Method not implemented.');\n  }\n  pageStartCount(pageStartCount: any, pageEndCount: any): any {\n    throw new Error('Method not implemented.');\n  }\n}\n","<div>{{name}}</div>\n\n<div>\n    <div class=\"card\">\n        <div class=\"card-body\">\n          <form novalidate [formGroup]=\"uploadForms\">\n            <div class=\"input-group mb-3\">\n              <div class=\"custom-file\">\n                <input type=\"file\" class=\"custom-file-input\" formControlName=\"files\" id=\"importFile\"\n                  (change)=\"fileChange($event, $event.target.files)\">\n                <label class=\"custom-file-label\" #labelImport for=\"importFile\">Choose file</label>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button class=\"btn btn-warning\" type=\"button\" >\n                <i class=\"fas fa-file-import\"></i> Upload\n              </button>\n              <button class=\"btn btn-outline-info\" type=\"button\"  style=\"margin-left: 4%;\">\n                Cancel\n              </button>\n              <button class=\"btn btn-outline-info\" type=\"button\"  style=\"    margin-left:35%;\">\n                Download Template\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n</div>\n<!-- <table cellspacing=\"0\" cellpadding=\"0\">\n    <tr>\n      <th *ngFor=\"let header of tableTitle\">{{ header }}</th>\n    </tr>\n    <tr *ngFor=\"let data of tableRecords; let i = index\">\n      <td *ngFor=\"let header of tableTitle\">\n        {{ data[header] }}\n      </td>\n    </tr>\n  </table> -->\n  <table class=\"table table-bordered align-center\">\n    <tr *ngFor=\"let d of data\">\n        <td *ngFor=\"let f of d\">\n            {{f}}\n        </td>\n    </tr>\n\n  </table>","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport {switchMap} from 'rxjs/operators'\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-frame',\n  templateUrl: './frame.component.html',\n  styleUrls: ['./frame.component.scss']\n})\nexport class FrameComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // this.autocomplete.valueChanges.pipe(switchMap(value=>))\n    const emp=interval(1000)\n    \n  }\n  autocomplete=new FormControl('')\n  Dropdown=[{id:1,name:'subash'},{id:2,name:'Rahul'},{id:3,name:'Mahesh'},{id:4,name:'Anand'}]\n  ChipDropdown=['Ramesh']\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  RemoveChip=[]\n  Option(event:MatAutocompleteSelectedEvent){\n    const drop=event.option.value.name\n    const FoundDropdown=this.Dropdown.filter(name=>name.name==drop)\n    const FoundChipdown=this.ChipDropdown.filter(name=>name==drop)\n    if(FoundChipdown.length){\n      return\n    }\n    if(FoundDropdown.length){\n      this.ChipDropdown.push(drop)\n    }\n\n    console.log('Drop',drop)\n    \n  }\n  remove(chip){\n    this.RemoveChip.push(chip)\n    let index=this.ChipDropdown.indexOf(chip)\n    \n    this.ChipDropdown.splice(index,1)\n   \n\n  }\n  public displayW(id){\n    // return id?id.name:undefined\n  }\n}\n","<!-- <iframe autoplay src=\"https://www.youtube.com/embed/6bg5tM2jmUU?autoplay=1&loop=1&mute=1&controls=0\" [frameBorder]=\"0\" allowFullscreen></iframe> -->\n<!-- <video  >\n    <source src=\"./assets/TOXIC_Rocking_Star_Yash_Geetu_Mohandas_KVN_Productions__6bg5tM2jmUU_247.webm\" type=\"video/webm\">\n</video> -->\n<!-- <iframe  src=\" \" [frameBorder]=\"0\"></iframe> -->\n<!-- <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d255747.55411418498!2d80.04381089666022!3d13.049472126023629!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3a5265ea4f7d3361%3A0x6e61a70b6863d433!2sChennai%2C%20Tamil%20Nadu!5e0!3m2!1sen!2sin!4v1702732323695!5m2!1sen!2sin\" width=\"600\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe> -->\n<!-- <div class=\"movie\">\n    <h1 class=\"text-white\">Movie</h1>\n    <p class=\"text-white\" style=\"width: 400px;\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Vel illum maiores quo totam et. Odit ea aspernatur corporis fugiat impedit quam atque facilis debitis nam cum beatae consectetur, animi cupiditate?</p>\n</div> -->\n<mat-form-field appearance=\"outline\">\n    <mat-chip-list #chiplist>\n        <mat-chip *ngFor=\"let chip of ChipDropdown\" (removed)=\"remove(chip)\" [selectable]=\"true\" [removable]=\"true\">\n            {{chip}}\n            <mat-icon matChipRemove>remove</mat-icon>\n        </mat-chip>\n        <input matInput [matAutocomplete]=\"auto\" [formControl]=\"autocomplete\" [matChipInputFor]=\"chiplist\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\">\n    </mat-chip-list>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"Option($event)\" [displayWith]=\"displayW\">\n        <mat-option *ngFor=\"let data of Dropdown\" [value]=\"data\">\n            {{data.name}}\n        </mat-option>\n    </mat-autocomplete>\n</mat-form-field>\n<div >\n    <h2>Removed List</h2>\n    <div class=\"Remove\" *ngFor=\"let data of RemoveChip\">\n        <div>{{data}}</div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { SharedService } from '../shared.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-grade',\n  templateUrl: './grade.component.html',\n  styleUrls: ['./grade.component.scss']\n})\nexport class GradeComponent implements OnInit {\n\n  constructor(private shared:SharedService,private router:Router) { }\n  Name=new FormControl('')\n\n  ngOnInit(): void {\n  }\n  add(){\n    this.shared.emp.next(this.Name.value)\n    this.router.navigate(['/excel'])\n    // this.dkkd()\n  }\n  dkkd(){\n   alert(this.shared.emp.value)\n  }\n\n}\n","<!-- <p>grade works!</p> -->\n<mat-form-field>\n    <input type=\"text\" matInput [formControl]=\"Name\">\n</mat-form-field>\n<button (click)=\"add()\">Add</button>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mapping',\n  templateUrl: './mapping.component.html',\n  styleUrls: ['./mapping.component.scss']\n})\nexport class MappingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n@Component({\n  selector: 'app-month-payroll-report',\n  templateUrl: './month-payroll-report.component.html',\n  styleUrls: ['./month-payroll-report.component.scss']\n})\nexport class MonthPayrollReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  startDate = new Date(1990, 0, 1);\n  DateFormgroup=new FormGroup({\n    DatePicker:new FormControl('')\n  })\n  data=[\n    {name:'subash',age:20,Place:'London',Pincode:612662},\n    {name:'ramesh',age:22,Place:'America',Pincode:612663},\n    {name:'aravinth',age:20,Place:'India',Pincode:612632},\n    {name:'ravi',age:25,Place:'antartica',Pincode:612662},\n  ]\n\n}\n","<div class=\"container mt-5\">\n    <!-- <p>dkdkdk</p> -->\n    <div>\n        <form action=\"\" [formGroup]=\"DateFormgroup\">\n            \n        <!-- <mat-form-field dateFormat2 class=\"smallinput spacingForm\" style=\"margin-top: -2%;\">\n            <mat-label> Month </mat-label>\n            <input matInput [matDatepicker]=\"dp\" [formControl]=\"monyear\" placeholder=\"Month and Year\"\n              formControlName=\"monthyear\" />\n            <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\n            <mat-datepicker #dp startView=\"multi-year\" (yearSelected)=\"chosenYearHandler($event)\"\n              (monthSelected)=\"chosenMonthHandler($event, dp)\" panelClass=\"example-month-picker\">\n            </mat-datepicker>\n          </mat-form-field> -->\n          <mat-form-field>\n            <mat-label>Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\n            <mat-datepicker-toggle class=\"toggle\" matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\n          </mat-form-field>\n        </form>\n    </div>\n    <div class=\"mt-5\">\n        <table class=\"table table-dark border text-center\">\n            <tbody>\n                <tr *ngFor=\"let d of data\" style=\"height: 80px;\">\n                    <td class=\"border padding\" >{{d.name}}</td>\n                    <td class=\"border padding\">{{d.age}}</td>\n                    <td class=\"border padding\">{{d.Place}}</td>\n                    <td class=\"border padding\">{{d.Pincode}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginServiceService } from '../services/login-service.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { strict } from 'assert';\n// import { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n id:number\n  constructor(private login:LoginServiceService,) { }\n  user=new FormGroup({\n    name:new FormControl('',[Validators.required]),\n    component_type:new FormControl('',[Validators.required]),\n    type:new FormControl('',[Validators.required]),\n    percentage:new FormControl('',[Validators.required]),\n    // id:new FormControl()\n  })\n  editUser=new FormGroup({\n    name:new FormControl('',[Validators.required]),\n    component_type:new FormControl('',[Validators.required]),\n    type:new FormControl('',[Validators.required]),\n    percentage:new FormControl('',[Validators.required]),\n    id:new FormControl('')\n    \n  })\n  SegmentName=new FormControl('')\n  // url=\"http://139.59.32.22:8188/\"\nlist:any\n  ngOnInit(): void {\n   this.segment();\n  this.component();\n  this.type()\n  // this.submit()\n  // this.SegmentNameFun()\n  }\n  segmentMaster:boolean=false\n  segmentAdd:boolean=false\n  SegmentEdit:boolean=false\n  add(){\n    this.segmentMaster=false\n    this.segmentAdd=true\n    this.SegmentEdit=false\n  }\n  segment(){\n    this.segmentMaster=true\n    this.segmentAdd=false\n    this.SegmentEdit=false\n    this.login.Valueget().subscribe(data=>{\n      sessionStorage.setItem('data',JSON.stringify(data))\n     \n    })\n    const l=JSON.parse(sessionStorage.getItem('data'))\n    // console.log(this.list)\n    this.list=l['data']\n    console.log(this.list)\n  }\n  cancel(){\n    this.segmentMaster=true\n    this.segmentAdd=false\n    this.SegmentEdit=false\n  }\n  submit(){\n    this.segmentMaster=true\n    this.segmentAdd=false\n    this.login.Valuepost(this.user.value).subscribe(data=>{\n      console.log(data)\n    })\n  }\n  l:any\n  update(){\n    // this.id=JSON.parse(sessionStorage.getItem('data'))['data'].id\n    this.segmentMaster=true\n    this.SegmentEdit=false\n    this.login.update(this.editUser.value).subscribe(data=>{\n    })\n   \n  }\n  edit(index){\n    // this.l=i\n    // const l=JSON.parse(sessionStorage.getItem('data'))\n    // let s=l['data']\n    this.login.edit(index.id).subscribe(data=>{\n      console.log(data)\n\n    })\n       this.editUser.patchValue({\n       \n        name:index.name,\n        component_type:index.component_type.id,\n        type:index.type.id,\n        percentage:index.percentage,\n        id: index.id\n    })\n    this.segmentMaster=false\n    this.SegmentEdit=true\n  }\n  // edit(index:any,i:any){\n  //   this.segmentMaster=false\n  //   this.SegmentEdit=true\n  //   this.editUser.patchValue({\n  //     id:index.id,\n  //     name:index.name,\n  //     component_type:index.component_type.id,\n  //     type:index.type.id,\n  //     percentage:index.percentage,\n  //   })\n  //   console.log(this.list[i].id)\n  // }\n  delete(index){\n    \n    this.login.delete(index).subscribe(data=>{\n      this.segment();\n    })\n  }\n  componentType:any\n  types:any\n  type(){\n    this.login.type().subscribe(data=>{\n      this.types=data['data']\n    })\n  }\n  component(){\n    // const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    // const headers={'Authorization':'Token '+token}\n    // this.http.get(this.url+'mstserv/payroll_component?name=',this.user.controls.component_type.value).subscribe(data=>{\n    //   this.componentType=data\n    // })\n    this.login.component().subscribe(data=>{\n      this.componentType=data['data']\n      console.log(this.componentType)\n    })\n  }\n  // SegmentName:string\n  SegmentNameFun(){\n    // if(this.list.name){\n    //   //  this.SegmentName='&querry='+this.list.name\n    //   let page=1\n     \n    // }\n    // if(this.SegmentName){\n      this.login.SegmentName(this.SegmentName.value).subscribe(data=>{\n        console.log('SegmentName',data)\n        this.list=data['data']\n        console.log('list',this.list.name)\n      })\n    // }\n\n   \n  }\n  clear(){\n    this.SegmentName.reset()\n    this.segment()\n   }\n  payType=['Basic','Allowance','BONUS','Deduction','salary','other earning']\n  bonusType=['QUARTERLY','HALFYEARLY','YEARLY','MONTHLY','CUSTOM']\n}\n","<div class=\"main\">\n    <div class=\"left\">\n    </div>\n    <div class=\"right\">\n        <div class=\"navbar-center navbar-light navbar-expand head\">\n            <ul class=\" navbar-nav ml-auto d-flex\">\n              <li class=\"nav-item\"><a class=\"nav-link\" >Mapping</a></li>\n              <li class=\"nav-item\"><a class=\"nav-link\" (click)=\"segment()\" style=\"cursor:pointer\">Segment</a></li>\n              <li class=\"nav-item\"><a class=\"nav-link\" >Grade</a></li>\n            </ul> \n            <!-- <app-segment-master></app-segment-master>\n            <app-segment-add></app-segment-add> -->\n          </div>\n          <div *ngIf=\"segmentMaster\">\n            <h1>Segment Master</h1>\n            <div class=\"slide\">\n                <div class=\"segment\">\n                    <mat-form-field appearance=\"outline\" class=\"\">\n                        <mat-label>Segment Name</mat-label>\n                        <input matInput class=\"segment\" [formControl]=\"SegmentName\">\n                    </mat-form-field>\n                </div>\n                <div class=\"card search click\" (click)=\"SegmentNameFun()\">\n                    <mat-icon>search</mat-icon>\n                </div>\n                <div class=\"clear\">\n                    <button class=\"btn card click\" (click)=\"clear()\">clear</button>\n                </div>\n                <div class=\"add\" (click)=\"add()\"> <mat-icon>add</mat-icon></div>\n            </div>\n            <div>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>S.no</th>\n                            <th>Segment Name</th>\n                            <th>Component Type</th>\n                            <th>Type</th>\n                            <th>Percentage</th>\n                            <th>Edit</th>\n                            <th>Delete</th>\n                        </tr>\n                        \n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let l of list;let i=index\">\n                            <td>{{i+1}}</td>\n                            <td>{{l?.name}}</td>\n                            <td>{{l?.component_type?.name}}</td>\n                            <td>{{l?.type.name}}</td>\n                            <td>{{l?.percentage}}</td>\n                            <td (click)=\"edit(l)\"><mat-icon style=\"cursor:pointer\" >edit</mat-icon></td>\n                            <td (click)=\"delete(l.id)\"><mat-icon style=\"cursor:pointer\">delete</mat-icon></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n          </div>\n          <div class=\"col-12\" *ngIf=\"segmentAdd\">\n            <h1>Segment Add</h1>\n            <form action=\"\" [formGroup]=\"user\">\n                <div class=\"display\">\n                    <div class=\"\">\n                        <label for=\"\">Name</label>\n                        <input type=\"text\" class=\"form-control height\" formControlName=\"name\">\n                    </div>\n                    <div class=\"\">\n                        <label for=\"pay.id\" class=\"d-block\">Pay Component Type</label>\n                        <mat-form-field appearance=\"outline\" class=\"option\" >\n                            <mat-select formControlName=\"component_type\">\n                                <mat-option *ngFor=\"let pay of componentType\" [value]=\"pay.id\">{{pay.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"\">\n                        <label for=\"\" class=\"d-block\">Bonus Type</label>\n                        <mat-form-field appearance=\"outline\" class=\"option\" >\n                            <mat-select formControlName=\"type\">\n                                <mat-option *ngFor=\"let bonus of types\" [value]=\"bonus.id\">{{bonus.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"\">\n                        <label for=\"\">Percentage</label>\n                        <input type=\"text\" class=\"form-control height\" formControlName=\"percentage\">\n                    </div>\n                </div>\n                \n            </form>\n            <div class=\"display\">\n                <button class=\"btn btn-light\" (click)=\"cancel()\">Cancel</button>\n                <button class=\"btn btn-light\" (click)=\"submit()\" [disabled]=\"!user.valid\">Submit</button>\n            </div>\n          </div>\n          <div *ngIf=\"SegmentEdit\">\n            <h1>Segment Edit</h1>\n            <form action=\"\" [formGroup]=\"editUser\">\n                <div class=\"display\">\n                    <div class=\"\">\n                        <label for=\"\">Name</label>\n                        <input type=\"text\" class=\"form-control height\" formControlName=\"name\">\n                    </div>\n                    <div class=\"\">\n                        <label  class=\"d-block\">Pay Component Type</label>\n                        <mat-form-field appearance=\"outline\" class=\"option\" >\n                            <mat-select formControlName=\"component_type\">\n                                <mat-option *ngFor=\"let pay of componentType\" [value]=\"pay.id\">{{pay.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"\">\n                        <label for=\"\" class=\"d-block\">Bonus Type</label>\n                        <mat-form-field appearance=\"outline\" class=\"option\" >\n                            <mat-select formControlName=\"type\">\n                                <mat-option *ngFor=\"let bonus of types\" [value]=\"bonus.id\">{{bonus.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"\">\n                        <label for=\"\">Percentage</label>\n                        <input type=\"text\" class=\"form-control height\" formControlName=\"percentage\">\n                    </div>\n                </div>\n                \n            </form>\n            <div class=\"display\">\n                <button class=\"btn btn-light\" (click)=\"cancel()\">Cancel</button>\n                <button class=\"btn btn-light\" (click)=\"update()\" [disabled]=\"!editUser.valid\">Update</button>\n            </div>\n          </div>\n    </div>\n    \n    \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ng-class',\n  templateUrl: './ng-class.component.html',\n  styleUrls: ['./ng-class.component.scss']\n})\nexport class NgClassComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-photos-shower',\r\n  templateUrl: './photos-shower.component.html',\r\n  styleUrls: ['./photos-shower.component.scss']\r\n})\r\nexport class PhotosShowerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  data:any='../../assets/wallpaper1.jpeg'\r\n  List=['/assets/wallpaper1.jpeg','/assets/wallpaper2.jpeg','/assets/wallpaper3.jpeg','/assets/wallpaper4.jpeg','/assets/wallpaper5.jpeg','/assets/wallpaper6.jpeg','/assets/wallpaper7.jpeg','/assets/wallpaper8.jpeg','/assets/wallpaper9.jpeg','/assets/wallpaper10.jpeg','/assets/wallpaper11.jpeg','/assets/wallpaper12.jpeg','/assets/wallpaper13.jpeg','/assets/wallpaper14.jpeg']\r\n  Image(data){\r\n    this.data=data\r\n  }\r\n}\r\n","<div class=\"flex\">\n    <div class=\"mainPhoto\">\n        <div class=\"BigImg\" >\n            <img src='{{data}}' alt=\"\">\n        </div>\n    </div>\n    <div class=\"ScrollBar\" >\n        <div *ngFor=\"let data of List\">\n            <div class=\"Img\" (click)=\"Image(data)\">\n                <img src='{{data}}' alt=\"\">\n            </div>\n        </div>\n       \n    </div>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-region-master',\n  templateUrl: './region-master.component.html',\n  styleUrls: ['./region-master.component.scss']\n})\nexport class RegionMasterComponent implements OnInit {\n\n  @ViewChild('labelImport')  labelImport: ElementRef;\n  isFileUpload: boolean=false;\n  images: File;\n  Action='payrollmaster_reportcolumns_upload';\nuploadForms: FormGroup;\n\n  constructor( ) { }\n  Searchform=true\n  Createform=false\n  Editform=false\n  Summarytable=true\n  SummaryData:any\n  DropdownData:any\n  pagination={\n    has_previous:false,\n    has_next:false,\n    index:1\n\n  }\n  ngOnInit(): void {\n    this.Summary(this.pagination.index)\n    this.dropdown()\n  }\n\n  NameSearch=new FormControl('')\n  CreateForm=new FormGroup({\n    name:new FormControl('',[Validators.required]),\n    type:new FormControl('',[Validators.required])\n  })\n  EditForm=new FormGroup({\n    name:new FormControl('',[Validators.required]),\n    type:new FormControl('',[Validators.required]),\n    id:new FormControl('')\n  })\n  Add(){\n    this.Searchform=false\n  this.Createform=true\n  // this.Editform=false\n  this.Summarytable=false\n  }\n  edit(i){\n    this.Searchform=false\n    // this.Createform=true\n    this.Editform=true\n    this.Summarytable=false\n    // let id=this.EditForm.get('id').value\n    // this.service.reportEditSummary(i).subscribe(data=>{\n    //   this.EditForm.patchValue({\n    //     name:data.name,\n    //     type:data.type.id,\n    //     id:data.id\n    //   })\n    // })\n    this.Search()\n  }\n  cancel(){\n    this.Searchform=true\n    this.Createform=false\n    this.Editform=false\n    this.Summarytable=true\n    this.CreateForm.reset();\n    this.EditForm.reset();\n  }\n  submit(){\n    if(this.CreateForm.value.name=='' || this.CreateForm.value.name==null){\n      // this.notification.showError('Please Enter Name')\n    }\n    else if(this.CreateForm.value.type=='' || this.CreateForm.value.type==null){\n      // this.notification.showError('Please Select Type')\n    }\n    else{\n      // this.service.reportSubmit(this.CreateForm.value).subscribe(data=>{\n      //   if(data.status=='success'){\n      //     this.notification.showSuccess('Successfully Created')\n      //     this.Searchform=true\n      //     this.Createform=false\n      //     this.Editform=false\n      //     this.Summarytable=true\n      //     this.Search()\n      //     this.CreateForm.reset();\n          \n      //   }\n      //   else if(data.name_message){\n      //     this.notification.showError(data.name_message)\n      //   }\n      // })\n    }\n  \n \n  }\n  prevpage(){\n    if(this.pagination.has_previous){\n      this.pagination.index=this.pagination.index-1\n    }\n    this.Summary(this.pagination.index)\n\n  }\n  nextpage(){\n    if(this.pagination.has_next){\n      this.pagination.index=this.pagination.index+1\n    }\n    this.Summary(this.pagination.index)\n  }\n  update(){\n    if(this.EditForm.value.name=='' || this.EditForm.value.name==null){\n      // this.notification.showError('Please Enter Name')\n    }\n    else if(this.EditForm.value.type=='' || this.EditForm.value.type==null){\n      // this.notification.showError('Please Select Type')\n    }\n    else{\n      // this.service.reportSubmit(this.EditForm.value).subscribe(data=>{\n      //   if(data.status=='success'){\n      //     this.notification.showSuccess('Successfully Updated')\n      //     this.Searchform=true\n      //     this.Createform=false\n      //     this.Editform=false\n      //     this.Summarytable=true\n      //     this.Search()\n      //     this.EditForm.reset();\n      //   }\n      //   else if(data.name_message){\n      //     this.notification.showError(data.name_message)\n      //   }\n      // })\n    }\n   \n    \n  }\n  Search(){\n    // this.service.reportSummary(this.NameSearch.value,this.pagination.index).subscribe(data=>{\n    //   this.SummaryData=data['data']\n    // })\n  }\n  Summary(page){\n    // this.service.reportSummary(this.NameSearch.value,page).subscribe(data=>{\n    //   this.SummaryData=data['data']\n    // })\n  }\n  delete(i){\n    // this.service.reportDeleteSummary(i).subscribe(data=>{\n    //   if(data.status=='success'){\n    //     this.notification.showSuccess('Successfully Deleted')\n    //     this.Search()\n    //   }\n    // })\n   \n    \n  }\n  clear(){\n    this.NameSearch.reset();\n    this.Search()\n  }\n  dropdown(){\n    // this.service.reportDropdown().subscribe(data=>{\n    //   this.DropdownData=data['data']\n    // })\n  }  \n  fileChange(file, files:FileList) {\n    this.labelImport.nativeElement.innerText = Array.from(files)\n    .map(f => f.name)\n    .join(', ');\n    this.images = <File>file.target.files[0];\n  }\n  uploadfile()\n  {\n    this.isFileUpload = true;\n    this.Searchform=false\n    this.Createform=false\n    this.Editform=false\n    this.Summarytable=false\n\n  }\n  uploadDocuments(){\n    // this.service.MasterUpload(this.Action,this.images).subscribe(data=>{\n    //   this.notification.showSuccess(data.message)\n    // })\n  }\n  downloadTemplate()\n  {\n    const download='payrollmaster_reportcolumns_upload'\n    // this.service.MasterUploadDownload(download,1).subscribe(data=>{\n    //   let binaryData = [];\n    //   binaryData.push(data)\n    //   let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\n    //   let link = document.createElement('a');\n    //   link.href = downloadUrl;\n    //   link.download = \"payrollmaster_reportcolumns_upload\" + \".xlsx\";\n    //   link.click();\n    // })\n  }\n  cancelupload(){\n    this.Searchform=true\n    this.Createform=false\n    this.Editform=false\n    this.Summarytable=true\n    this.isFileUpload=false\n  }\n}\n","<div class=\"pl-5 mt-5 container\">\n    <div *ngIf=\"Searchform\">\n        <h2 class=\"ReportColumns\">Region Master</h2>\n        <div class=\"row col-md-10\">\n            <div class=\"col-3 display pad\">\n                <form action=\"\">\n                <mat-form-field >\n                    <mat-label>Name</mat-label>\n                    <input  matInput [formControl]=\"NameSearch\">\n                </mat-form-field>\n            </form>\n            </div>\n            <div class=\" row col-5 display\">\n                <div class=\"col-2\">\n                    <button mat-stroked-button type=\"button\" class=\"button\"\n                aria-label=\"Search\"\n                (click)=\"Search()\">\n                <mat-icon>search</mat-icon>\n            </button>\n                </div>\n                <div class=\"col-2\">\n                    <button mat-stroked-button type=\"button\"  class=\"clear\" (click)=\"clear()\">Clear</button>\n                </div>\n                <div class=\"col-6\">\n                    <!-- <button type=\"button\" class=\"add\"> -->\n                        <!-- <i class=\"fa-solid fa-plus-circle\" style=\"color: #0259ed;font-size:32px;cursor:pointer\" matTooltip=\"Add\" (click)=\"Add()\"></i> -->\n                        <button type=\"button\" class=\"add\" mat-fab>\n                            <mat-icon matTooltip=\"Add\" (click)=\"Add()\" style=\"color: black;\">add</mat-icon>\n                        </button>\n                    <!-- </button> -->\n            \n                        <!-- <button type=\"button\" id=\"add\" mat-fab \n                        (click)=\"uploadfile()\">\n                        <mat-icon matTooltip=\"Upload\" style=\"color: black;\">arrow_upward</mat-icon>\n                    </button> -->\n                </div>\n                \n            \n\n      \n\n            </div>\n            <div class=\"col-3\">\n                \n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"Createform\">\n        <form [formGroup]=\"CreateForm\">\n            <h2 class=\"ReportColumns\">Region Master Add</h2>\n            <!-- <mat-form-field> -->\n                <div class=\"col-12 row\">\n                    <div class=\"col-6 row\">\n                        <div class=\"col-6\">\n                            <!-- <div class=\"form-group\"> -->\n                                <label>Name</label><br>\n                            <mat-form-field>\n                                <input type=\"text\" matInput formControlName=\"name\">\n                            </mat-form-field>\n                               \n                            <!-- </div> -->\n                        </div>\n                        <div class=\"col-6\">\n                            <!-- <div class=\"form-group\"> -->\n                            <label>Type</label><br>\n                            <mat-form-field>\n                                <!-- <select name=\"\" id=\"\" formControlName=\"Dropdown\" class=\"form-control pr-1\" >\n                                    <option value=\"\">a</option>\n                                    <option value=\"\">B</option>\n                                    <option value=\"\">C</option>\n                                </select> -->\n                                <mat-select formControlName=\"type\">\n                                    <mat-option *ngFor=\"let data of DropdownData\" [value]=\"data.id\">\n                                        {{data.type}}\n                                    </mat-option>\n                                    \n                                </mat-select>\n                            </mat-form-field>\n                               \n                            <!-- </div> -->\n                        </div>\n                      \n                        \n                    </div>\n               \n            </div>\n            <div class=\"ml-3 mt-3\">\n                <button class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\n                <button class=\"btn btn-primary ml-2\" (click)=\"submit()\" [disabled]=\"!CreateForm.valid\">Submit</button>\n            </div>    \n            <!-- </mat-form-field> -->\n        </form>\n    </div>\n    <div *ngIf=\"Editform\">\n        <form [formGroup]=\"EditForm\">\n            <h2 class=\"ReportColumns\">Region Master Edit</h2>\n            <!-- <mat-form-field> -->\n                <div class=\"col-12 row\">\n                    <div class=\"col-6 row\">\n                        <div class=\"col-6\">\n                            <!-- <div class=\"form-group\"> -->\n                                <label>Name</label><br>\n                            <mat-form-field>\n                                <input type=\"text\" matInput formControlName=\"name\">\n                            </mat-form-field>\n                               \n                            <!-- </div> -->\n                        </div>\n                        <div class=\"col-6\">\n                            <!-- <div class=\"form-group\"> -->\n                            <label>Type</label><br>\n                            <mat-form-field>\n                                <!-- <select name=\"\" id=\"\" formControlName=\"Dropdown\" class=\"form-control pr-1\" >\n                                    <option value=\"\">a</option>\n                                    <option value=\"\">B</option>\n                                    <option value=\"\">C</option>\n                                </select> -->\n                                <mat-select formControlName=\"type\">\n                                    <mat-option *ngFor=\"let data of DropdownData\" [value]=\"data.id\">\n                                        {{data.type}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                               \n                            <!-- </div> -->\n                        </div>\n                      \n                        \n                    </div>\n               \n            </div>\n            <div class=\"ml-3 mt-3\">\n                <button class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\n                <button class=\"btn btn-primary ml-2\" (click)=\"update()\" [disabled]=\"!EditForm.valid\">Update</button>\n            </div>\n                \n            <!-- </mat-form-field> -->\n        </form>\n    </div>\n    <div class=\"padTable\" *ngIf=\"Summarytable\">\n        <div class=\"table-responsive\" style=\"width: 600px;\">\n            <table class=\"table border text-center\">\n                <thead class=\"border\">\n                    <th class=\"border text-center\">Name</th>\n                    <th class=\"border text-center\">Type</th>\n                    <th class=\"border width text-center\">Edit</th>\n                    <th class=\"border width text-center\">Delete</th>\n                </thead>\n                <tbody class=\"border\">\n                    <tr  *ngFor=\"let data of SummaryData; let i=index\">\n                        <td class=\"border text-center\">{{data.name}}</td>\n                        <td class=\"border text-center\">{{data.type.type}}</td>\n                        <td class=\"border width text-center\"><i class=\"fa-solid fa-pencil\" (click)=\"edit(data.id)\"></i></td>\n                        <td class=\"border width text-center\"><i class=\"fa-solid fa-trash-can\" (click)=\"delete(data.id)\"></i></td>\n                    </tr>\n                   \n                </tbody>\n            </table>\n            <div class=\"col-sm-12\" style=\"font-size: small;text-align: right;margin-bottom: 5%;\">\n                <button type=\"button\" (click)=\"prevpage()\" mat-icon-button [disabled]=\"pagination.has_previous === false\"\n                    color=\"primary\" >\n                    <mat-icon>arrow_back</mat-icon>\n                </button> \n                {{pagination.index}}\n                <button type=\"button\" (click)=\"nextpage()\" mat-icon-button color=\"primary\" [disabled]=\"pagination.has_next === false\"\n                    >\n                    <mat-icon>arrow_forward</mat-icon>\n                </button>\n            </div>\n        </div>\n        \n    </div>\n\n</div>\n<!-- <div *ngIf=\"isFileUpload\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n          <form novalidate [formGroup]=\"uploadForms\">\n            <div class=\"input-group mb-3\">\n              <div class=\"custom-file\">\n                <input type=\"file\" class=\"custom-file-input\" formControlName=\"files\" id=\"importFile\"\n                  (change)=\"fileChange($event, $event.target.files)\">\n                <label class=\"custom-file-label\" #labelImport for=\"importFile\">Choose file</label>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button class=\"btn btn-warning\" type=\"button\" (click)=\"uploadDocuments()\">\n                <i class=\"fas fa-file-import\"></i> Upload\n              </button>\n              <button class=\"btn btn-outline-info\" type=\"button\" (click)=\"cancelupload()\" style=\"margin-left: 4%;\">\n                Cancel\n              </button>\n              <button class=\"btn btn-outline-info\" type=\"button\" (click)=\"downloadTemplate()\" style=\"    margin-left:35%;\">\n                Download Template\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n  </div> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-segment-add',\n  templateUrl: './segment-add.component.html',\n  styleUrls: ['./segment-add.component.scss']\n})\nexport class SegmentAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>segment-add works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-segment-master',\n  templateUrl: './segment-master.component.html',\n  styleUrls: ['./segment-master.component.scss']\n})\nexport class SegmentMasterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Segment Master</h1>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from 'rxjs'\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n  constructor(private http:HttpClient) { }\n  url=\"http://139.59.32.22:8188/\"\n  post(form):Observable<any>{\n    return this.http.post(this.url+'usrserv/auth_token',form)\n  }\n  Valueget():Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.get(this.url+'mstserv/create_segmentmaster',{'headers':headers})\n  }\n  Valuepost(form):Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.post(this.url+'mstserv/create_segmentmaster',form,{'headers':headers})\n  }\n  component():Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.get(this.url+'mstserv/create_componenttype',{'headers':headers})\n  }\n  type():Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.get(this.url+'mstserv/payrolldeduction_type_dropdown',{'headers':headers})\n  }\n  delete(form):Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.delete(this.url+'mstserv/segment_get/'+form,{'headers':headers})\n  }\n  edit(form){\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.get(this.url+'mstserv/segment_get/'+form,{'headers':headers})\n  }\n  update(form):Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    // const ses=JSON.parse(sessionStorage.getItem('data'))\n    // const session=ses['data'].id\n    return this.http.post(this.url+`mstserv/create_segmentmaster`,form,{'headers':headers})\n  }\n  SegmentName(form){\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.get(this.url+'mstserv/create_segmentmaster?name='+form+'&page=1',{'headers':headers})\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  constructor() { }\n  public emp=new BehaviorSubject('')\n  get(){\n    return this.emp\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n  list=[]\n  i:number\n\n  ngOnInit(): void {\n    console.log(this.list)\n  }\n  TestGroup=new FormGroup({\n    Name:new FormControl('',[Validators.required]),\n    Age:new FormControl('',[Validators.required]),\n    Place:new FormControl('',[Validators.required]),\n    Work:new FormControl('',[Validators.required])\n\n  })\n  Submit(){\n    console.log(\"Submit\",this.TestGroup.value)\n    this.list.push(this.TestGroup.value)\n    this.TestGroup.reset()\n  }\n  update(){\n    this.list[this.i]=this.TestGroup.value\n    this.TestGroup.reset()\n  }\n  Edit(i,l){\n    this.i=l\n    console.log('i',i)\n    this.TestGroup.patchValue({\n      Name:i.Name,\n      Age:i.Age,\n      Place:i.Place,\n      Work:i.Work\n    })\n  }\n  Delete(l){\n    this.list.splice(l)\n    console.log(l)\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div class=\"h2\">Student Form</div>\n    <div class=\"card p-5\">\n\n    <form action=\"\" [formGroup]=\"TestGroup\" >\n        <div class=\"col-12 row\">\n            <div class=\"form-group col-6\">\n                <label>Name</label>\n                <input type=\"text\" formControlName=\"Name\" class=\"form-control\" placeholder=\"Name\">\n            </div>\n            <div class=\"form-group col-6\">\n                <label>Age</label>\n                <input type=\"number\" formControlName=\"Age\" class=\"form-control\" placeholder=\"Age\">\n            </div>\n        </div>\n        <div class=\"col-12 row\">\n            <div class=\"form-group col-6\">\n                <label>Place</label>\n                <input type=\"text\" formControlName=\"Place\" class=\"form-control\" placeholder=\"Place\">\n            </div>\n            <div class=\"form-group col-6\">\n                <label>Work</label>\n                <input type=\"text\" formControlName=\"Work\" class=\"form-control\" placeholder=\"Work\">\n            </div>\n        </div>\n        <div class=\"float-right mr-5 mt-2\">\n            <button class=\"btn btn-primary\" (click)=\"Submit()\" [disabled]=\"!TestGroup.valid\">Submit</button>\n            <button class=\"btn btn-danger ml-2\" (click)=\"update()\">update</button>\n        </div>\n        \n    </form>\n  \n</div>\n<table class=\"table border mt-2\">\n    <thead class=\"bg-dark text-white\">\n        <tr>\n            <th>S.No</th>\n            <th>Name</th>\n            <th>Age</th>\n            <th>Place</th>\n            <th>Work</th>\n            <th>Edit</th>\n            <th>Delete</th>\n            <!-- <th>Update</th> -->\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let l of list let i=index\">\n            <td>{{i+1}}</td>\n            <td>{{l.Name}}</td>\n            <td>{{l.Age}}</td>\n            <td>{{l.Place}}</td>\n            <td>{{l.Work}}</td>\n            <td (click)=\"Edit(l,i)\" style=\"cursor:pointer;color:green\">Edit</td>\n            <td (click)=\"Delete(i)\" style=\"cursor:pointer;color:red\">Delete</td>\n            <!-- <td (click)=\"update(i)\" style=\"cursor:pointer;color:orange\">Update</td> -->\n        </tr>\n    </tbody>\n</table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n// import { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\nimport { LoginServiceService } from '../services/login-service.service';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.scss']\n})\nexport class UserLoginComponent implements OnInit {\n\n \n\n  name=false\n  constructor(private login:LoginServiceService ,private router:Router) { }\n  output:any\n  ngOnInit(): void {\n  }\n  userlogin=new FormGroup({\n    username:new FormControl('',[Validators.required]),\n    password:new FormControl('',[Validators.required])\n  })\n  signUp(){\n    if(this.userlogin.controls.username.value=='EMP007' && this.userlogin.controls.password.value=='1234'){\n      this.login.post(this.userlogin.value).subscribe(data=>{\n        this.name=false\n        sessionStorage.setItem('UserLogin',JSON.stringify(data))\n        console.log(data)\n      })\n      this.router.navigate(['nav'])\n    }\n    else{\n      // console.log('incorrect username')\n      if(this.userlogin.controls.username.value!=='EMP007' || this.userlogin.controls.password.value!=='1234'){\n        this.output='USER NOT FOUND'\n        this.name=true\n      }\n      // else if(this.userlogin.controls.username.value!=='EMP007'){\n      //   this.output='Invalid username'\n      //   this.name=true\n      // }\n      // else if(this.userlogin.controls.password.value!=='1234'){\n      //   this.output='Invalid password'\n      //   this.name=true\n      // }\n      \n    }\n  }\n}\n","<div class=\"main\">\n    <div class=\"alert alert-warning col-2 float-right mt-5 pl-4 fix\" style=\"margin-right: 70px;\"  role=\"alert\" *ngIf=\"name\"><mat-icon>warning</mat-icon><span class=\"pl-1\">{{output}}</span></div>\n    <div class=\"container\">\n        <div class=\"card cards  col-4  border-dark\">\n            <h1 class=\"text-center mt-2 font \">LOGIN</h1>\n            <form action=\"\" [formGroup]=\"userlogin\">\n                <div class=\"form-group\">\n                    <label class=\"h5\" for=\"\">Name</label>\n                    <input type=\"text\" name=\"name\" class=\"form-control bg-none\" placeholder=\"Enter username\" formControlName=\"username\">\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"h5\" for=\"\">Password</label>\n                    <input type=\"text\" name=\"password\" class=\"form-control\" placeholder=\"Enter password\" formControlName=\"password\">\n                </div>\n                <div>\n                   <button class=\"btn btn-primary float-right mb-3\" [disabled]=\"!userlogin.valid\" (click)=\"signUp()\">Sign In</button>\n                </div>\n            </form>\n        </div>  \n        <!-- <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div> -->\n          \n    </div>\n</div>\n<!-- style=\"width: 150px; margin-top:30px;height:100px\" -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
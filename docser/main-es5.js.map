{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/animation/animation.component.ts","webpack:///src/app/animation/animation.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ctc/ctc.component.ts","webpack:///src/app/ctc/ctc.component.html","webpack:///src/app/dbt-screen/dbt-screen.component.ts","webpack:///src/app/dbt-screen/dbt-screen.component.html","webpack:///src/app/element/element.component.ts","webpack:///src/app/element/element.component.html","webpack:///src/app/excel-upload/excel-upload.component.ts","webpack:///src/app/excel-upload/excel-upload.component.html","webpack:///src/app/frame/frame.component.ts","webpack:///src/app/frame/frame.component.html","webpack:///src/app/grade/grade.component.ts","webpack:///src/app/grade/grade.component.html","webpack:///src/app/mapping/mapping.component.ts","webpack:///src/app/month-payroll-report/month-payroll-report.component.ts","webpack:///src/app/month-payroll-report/month-payroll-report.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/ng-class/ng-class.component.ts","webpack:///src/app/photos-shower/photos-shower.component.ts","webpack:///src/app/photos-shower/photos-shower.component.html","webpack:///src/app/region-master/region-master.component.ts","webpack:///src/app/region-master/region-master.component.html","webpack:///src/app/segment-add/segment-add.component.ts","webpack:///src/app/segment-add/segment-add.component.html","webpack:///src/app/segment-master/segment-master.component.ts","webpack:///src/app/segment-master/segment-master.component.html","webpack:///src/app/services/login-service.service.ts","webpack:///src/app/shared.service.ts","webpack:///src/app/test/test.component.ts","webpack:///src/app/test/test.component.html","webpack:///src/app/user-login/user-login.component.ts","webpack:///src/app/user-login/user-login.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AnimationComponent","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","CTCComponent","foods","value","viewValue","hide","Gross","DbtScreenComponent","ElementComponent","ExcelUploadComponent","shared","name","emp","alert","file","files","read","FileReader","readAsBinaryString","target","onload","blob","result","BlobRead","type","SheetNames","Sheets","data","sheet_to_json","header","labelImport","nativeElement","innerText","Array","from","map","f","pageStartCount","pageEndCount","fileChange","FrameComponent","autocomplete","Dropdown","ChipDropdown","separatorKeysCodes","RemoveChip","event","drop","option","FoundDropdown","filter","FoundChipdown","length","push","console","log","chip","index","indexOf","splice","Option","GradeComponent","router","Name","next","navigate","add","MappingComponent","MonthPayrollReportComponent","startDate","Date","DateFormgroup","DatePicker","age","Place","Pincode","NavComponent","login","user","required","component_type","percentage","editUser","SegmentName","segmentMaster","segmentAdd","SegmentEdit","payType","bonusType","segment","Valueget","subscribe","sessionStorage","setItem","JSON","stringify","l","parse","getItem","list","Valuepost","update","edit","patchValue","types","componentType","reset","NgClassComponent","PhotosShowerComponent","List","RegionMasterComponent","isFileUpload","Action","Searchform","Createform","Editform","Summarytable","pagination","has_previous","has_next","NameSearch","CreateForm","EditForm","Summary","dropdown","i","Search","page","join","images","download","SegmentAddComponent","SegmentMasterComponent","LoginServiceService","http","url","form","post","token","headers","get","providedIn","SharedService","TestComponent","TestGroup","Age","Work","Submit","UserLoginComponent","userlogin","username","password","controls","output","signUp","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-animation',\n  templateUrl: './animation.component.html',\n  styleUrls: ['./animation.component.scss']\n})\nexport class AnimationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <p>animation works!</p> -->\n<!-- box animation -->\n<div class=\"main\">\n    <div class=\"box\">\n\n    </div>\n</div>\n<!-- balloon animation -->\n<!-- <div class=\"whole\">\n    <div class=\"baloon1\">\n        <div class=\"baloonTop1\"></div>\n        <div class=\"baloondown1\">\n            <div class=\"baloonLine1\">\n                \n            </div>\n        </div>\n    </div>\n    <div class=\"baloon2\">\n        <div class=\"baloonTop2\"></div>\n        <div class=\"baloondown2\">\n            <div class=\"baloonLine2\">\n                \n            </div>\n        </div>\n    </div>\n    <div class=\"baloon3\">\n        <div class=\"baloonTop3\"></div>\n        <div class=\"baloondown3\">\n            <div class=\"baloonLine3\">\n                \n            </div>\n        </div>\n    </div>\n    <div class=\"baloon4\">\n        <div class=\"baloonTop4\"></div>\n        <div class=\"baloondown4\">\n            <div class=\"baloonLine4\">\n                \n            </div>\n        </div>\n    </div>\n</div> -->\n<!-- Ball animation -->\n<!-- <div class=\"Ball_background\">\n    <div class=\"ball\">\n        \n    </div>\n</div> -->\n<!-- Small Ball -->\n<!-- <div class=\"Flex\">\n    <div class=\"Small_ball1 Small_ball\"></div>\n    <div class=\"Small_ball2 Small_ball\"></div>\n    <div class=\"Small_ball3 Small_ball\"></div>\n    <div class=\"Small_ball4 Small_ball\"></div>\n    <div class=\"Small_ball5 Small_ball\"></div>\n    <div class=\"Small_ball6 Small_ball\"></div>\n    <div class=\"Small_ball7 Small_ball\"></div>\n    <div class=\"Small_ball8 Small_ball\"></div>\n    <div class=\"Small_ball9 Small_ball\"></div>\n    <div class=\"Small_ball10 Small_ball\"></div>\n</div> -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SegmentMasterComponent } from './segment-master/segment-master.component';\nimport { AppComponent } from './app.component';\nimport { MappingComponent } from './mapping/mapping.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { NavComponent } from './nav/nav.component';\nimport { GradeComponent } from './grade/grade.component';\nimport { ExcelUploadComponent } from './excel-upload/excel-upload.component';\n\n\nconst routes: Routes = [\n  {path:'SegmentMaster',component:SegmentMasterComponent},\n  {path:'d',component:UserLoginComponent},\n  {path:'UserLogin',component:UserLoginComponent},\n  {path:'nav',component:NavComponent},\n  {path:'mapping',component:MappingComponent},\n  {path:'',component:GradeComponent},\n  {path:'excel',component:ExcelUploadComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'vsolvSample';\n}\n","<!-- <router-outlet></router-outlet> -->\n<!-- <app-test></app-test> -->\n<!-- <app-frame></app-frame> -->\n<!-- <app-animation></app-animation> -->\n<!-- <app-ng-class></app-ng-class> -->\n<!-- <app-grade></app-grade>\n<app-excel-upload></app-excel-upload> -->\n<!-- <router-outlet></router-outlet> -->\n<app-region-master></app-region-master>\n<!-- <app-element></app-element> -->\n<!-- <app-month-payroll-report></app-month-payroll-report> -->\n<!-- <app-photos-shower></app-photos-shower> -->\n<!-- <app-dbt-screen></app-dbt-screen> -->\n<!-- <app-chartt></app-chartt> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SegmentMasterComponent } from './segment-master/segment-master.component';\nimport { SegmentAddComponent } from './segment-add/segment-add.component';\nimport { MappingComponent } from './mapping/mapping.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,  ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { GradeComponent } from './grade/grade.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatSelectModule} from '@angular/material/select';\nimport { CTCComponent } from './ctc/ctc.component';\nimport { TestComponent } from './test/test.component';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MonthPayrollReportComponent } from './month-payroll-report/month-payroll-report.component';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FrameComponent } from './frame/frame.component';\nimport { AnimationComponent } from './animation/animation.component';\nimport { NgClassComponent } from './ng-class/ng-class.component';\nimport { ExcelUploadComponent } from './excel-upload/excel-upload.component';\nimport { RegionMasterComponent } from './region-master/region-master.component';\nimport { ElementComponent } from './element/element.component';\nimport { PhotosShowerComponent } from './photos-shower/photos-shower.component';\nimport { DbtScreenComponent } from './dbt-screen/dbt-screen.component';\n// import { CharttComponent } from './chartt/chartt.component';\n// import { HomeComponent } from './home/home.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    SegmentMasterComponent,\n    SegmentAddComponent,\n    MappingComponent,\n    UserLoginComponent,\n    NavComponent,\n    GradeComponent,\n    CTCComponent,\n    TestComponent,\n    MonthPayrollReportComponent,\n    FrameComponent,\n    AnimationComponent,\n    NgClassComponent,\n    RegionMasterComponent,\n    ExcelUploadComponent,\n    ElementComponent,\n    PhotosShowerComponent,\n    DbtScreenComponent,\n    // CharttComponent,\n    // HomeComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,MatSliderModule,MatSelectModule,MatAutocompleteModule,MatCheckboxModule,MatChipsModule,MatDatepickerModule,MatNativeDateModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ctc',\n  templateUrl: './ctc.component.html',\n  styleUrls: ['./ctc.component.scss']\n})\nexport class CTCComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  foods= [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n  hide:boolean=false\n  Gross(){\n    this.hide=true\n  }\n}\n","<div class=\"container mt-5\">\n    <!-- <div class=\"form-group col-12\">\n        <input type=\"text\" name=\"\" id=\"\" placeholder=\"TakeHome\" class=\"form-control col-3\">\n    </div>\n    <div class=\"col-12 d-flex\">\n        <input type=\"text\" placeholder=\"CTC\" class=\"form-control col-3\">\n        <span class=\"col-1\"></span>\n        <label for=\"\" class=\"col-3 text-center\">Monthly</label>\n        <span class=\"col-1\"></span>\n        <label for=\"\" class=\"col-3 text-center\">Yearly</label>\n    </div> -->\n    <div class=\"col-12 name\">\n        R. SELVAKUMAR's Pay Structure\n    </div>\n    <div class=\"col-12 mt-5 row\">\n        <div class=\"col-4\">\n            <!-- <h4>Basic mat-select</h4> -->\n            <mat-form-field appearance=\"outline\" class=\"col-12\">\n            <mat-label>Favorite food</mat-label>\n            <mat-select>\n                <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                {{food.viewValue}}\n                </mat-option>\n            </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"col-4\">\n            <!-- <h4>Basic mat-select</h4> -->\n            <mat-form-field appearance=\"outline\" class=\"col-12\">\n            <mat-label>Favorite food</mat-label>\n            <mat-select>\n                <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                {{food.viewValue}}\n                </mat-option>\n            </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"col-4\">\n            <!-- <h4>Basic mat-select</h4> -->\n            <mat-form-field appearance=\"outline\" class=\"col-12\">\n            <mat-label>Favorite food</mat-label>\n            <mat-select>\n                <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                {{food.viewValue}}\n                </mat-option>\n            </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"container \" >\n        <form action=\"\">\n        <!-- <table class=\"table \" style=\"height:50px\" >\n            <thead class=\"bg-dark text-light\">\n                <th>SALARY COMPONENTS\n                </th>\n                <th>CALCULATION</th>\n                <th>\n                    MONTHLY</th>\n                <th>\n                        YEARLY</th>\n            </thead>\n            <tbody class=\"body \">\n                <tr>\n                    <td>Take Home</td>\n                    <td></td>\n                    <td>\n                        <mat-form-field appearance=\"outline\">\n                            <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                        </mat-form-field>\n                    </td>\n                    <td>\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td >Gross Remuneration</td>\n                    <td></td>\n                    <td>\n                        <mat-form-field appearance=\"outline\">\n                            <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                        </mat-form-field>\n                    </td>\n                    <td>\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                        </mat-form-field>\n                    </td>\n                </tr>\n                \n            </tbody>\n        </table> -->\n        <div class=\"row col-12 border d-flex align-items-center bg-dark text-light\" style=\"height: 50px;\">\n            <div class=\"col-3\">SALARY COMPONENTS</div>\n            <div class=\"col-3\">\n                CALCULATION</div>\n            <div class=\"col-3\">MONTHLY</div>\n            <div class=\"col-3\">\n                YEARLY</div>\n        </div>\n        <div class=\"row col-12 d-flex align-items-center skyblue\">\n            <div class=\"col-3\">Task Home</div>\n            <div class=\"col-3\">\n                </div>\n            <div class=\"col-3\">\n                <mat-form-field appearance=\"outline\">\n                    <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                </mat-form-field>\n            </div>\n            <div class=\"col-3\">\n                <mat-form-field appearance=\"outline\">\n                    <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row col-12 d-flex align-items-center skyblue\">\n            <div class=\"col-3\" style=\"cursor: pointer;\" (click)=\"Gross()\">Gross Remuneration</div>\n            <div class=\"col-3\">\n                </div>\n            <div class=\"col-3\">\n                <mat-form-field appearance=\"outline\">\n                    <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                </mat-form-field>\n            </div>\n            <div class=\"col-3\">\n                <mat-form-field appearance=\"outline\">\n                    <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                </mat-form-field>\n            </div>\n\n        </div>\n        <div *ngIf=\"hide\">\n            <div class=\"row col-12 d-flex align-items-center skyblue\">\n                <div class=\"col-3\">1</div>\n                <div class=\"col-3\">\n                    </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n    \n            </div>\n            <div class=\"row col-12 d-flex align-items-center skyblue\">\n                <div class=\"col-3\">2</div>\n                <div class=\"col-3\">\n                    </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n    \n            </div>\n            <div class=\"row col-12 d-flex align-items-center skyblue\">\n                <div class=\"col-3\">3</div>\n                <div class=\"col-3\">\n                    </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right; \"formControlName=\"\">\n                    </mat-form-field>\n                </div>\n    \n            </div>\n            <div class=\"row col-12 d-flex align-items-center skyblue\">\n                <div class=\"col-3\">4</div>\n                <div class=\"col-3\">\n                    </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input type=\"number\" matInput formControlName=\"monthtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-3\">\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput formControlName=\"yrtakeHome\" style=\"text-align: right;\">\n                    </mat-form-field>\n                </div>\n    \n            </div>\n        </div>\n    </form>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dbt-screen',\n  templateUrl: './dbt-screen.component.html',\n  styleUrls: ['./dbt-screen.component.scss']\n})\nexport class DbtScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\">\n    <div class=\"screen\">\n        <div class=\"left\"></div>\n        <div class=\"right\">\n            <div class=\"rightTop\">\n                <h2 class=\"text-center\">Department Of Agriculture</h2>\n                <h2 class=\"text-center\">Puducherry</h2>\n            </div>\n            <div class=\"rightBottom\">\n                <div class=\"SignIn\">Sign in</div>\n                <div class=\"TypeSmall\">Type your name and password to sign in</div>\n                <div>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>UserName</mat-label>\n                        <input matInput>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Password</mat-label>\n                        <input matInput>\n                    </mat-form-field>\n                </div>\n                <div>forgot</div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-element',\n  templateUrl: './element.component.html',\n  styleUrls: ['./element.component.scss']\n})\nexport class ElementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div >\n    <div class=\"row ml-4\">\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>Contractor Name\n                </mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>Code</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>Region</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>Taluk</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>District</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>Pan No</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <mat-form-field>\n                <mat-label>GST</mat-label>\n                <input type=\"text\" matInput>\n            </mat-form-field>\n        </div> \n        <div class=\"col-md-2\">\n            <mat-form-field class=\"dataWidth\">\n                <mat-label>\n                    Month\n                </mat-label>\n                <input matInput format [matDatepicker]=\"picker\" placeholder=\"Choose a date\" formControlName=\"logDate\" >\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n        </div>\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-outline-primary bRadius\">\n                <i class=\"fa fa-search\"></i>\n            </button>\n        </div>\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-outline-primary bRadius\">\n                search\n            </button>\n        </div>\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-outline-primary bRadius\">\n                Download\n            </button>\n        </div>\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-outline-primary bRadius\">\n                Upload\n            </button>\n        </div>\n    </div>\n   <div class=\"table-responsive ml-4\">\n     <table class=\"table table-bordered\">\n        <thead>\n            <th>Sno</th>\n            <th>Contractor Code and Name</th>\n            <th>Month</th>\n            <th>Amount</th>\n            <th>District</th>\n            <th>Region</th>\n            <th>Taluk</th>\n            <th>Pan</th>\n            <th>GST</th>\n            <th>Action</th>\n            <th class=\"checkBox\">Bulk <span ><input type=\"checkbox\"></span></th>\n        </thead>\n        <tbody>\n            <tr>\n                <td>\n                  <mat-form-field >\n                    <mat-label>Employee</mat-label>\n                    <input matInput placeholder=\"employee\"  autocomplete=\"off\"\n                      readonly=\"true\">\n                  </mat-form-field>\n\n                </td>\n                <td>\n                  <!-- <mat-form-field>\n                    <mat-label>PayComponent Type</mat-label>\n                    <mat-select > -->\n                      <!-- <mat-option *ngFor=\"let type of paycomponent_arrays\" [value]=\"type.id\">\n                        {{type.name}}\n                      </mat-option> -->\n                    <!-- </mat-select>\n\n                  </mat-form-field> -->\n                  <mat-form-field >\n                    <mat-label>Employee</mat-label>\n                    <input matInput placeholder=\"employee\"  autocomplete=\"off\"\n                      readonly=\"true\">\n                  </mat-form-field>\n                </td>\n\n                <td>\n                  <mat-form-field>\n                    <mat-label>Active Date</mat-label>\n                    <input matInput [matDatepicker]=\"picker35\" >\n                    <mat-datepicker-toggle matSuffix [for]=\"picker35\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker35></mat-datepicker>\n                  </mat-form-field>\n                </td>\n                <td>\n                    <mat-form-field>\n                        <mat-label>Amount</mat-label>\n                        <input matInput placeholder=\"amount\"  autocomplete=\"off\">\n    \n                      </mat-form-field>\n                </td>\n\n                <td>\n                  <mat-form-field>\n                    <mat-label>Amount</mat-label>\n                    <input matInput placeholder=\"amount\"  autocomplete=\"off\" readonly=\"true\">\n\n                  </mat-form-field>\n                </td>\n                <td>\n                    <mat-form-field>\n                      <mat-label>Amount</mat-label>\n                      <input matInput placeholder=\"amount\"  autocomplete=\"off\" readonly=\"true\">\n  \n                    </mat-form-field>\n                  </td>\n                  <td>\n                    <mat-form-field>\n                      <mat-label>Amount</mat-label>\n                      <input matInput placeholder=\"amount\"  autocomplete=\"off\" readonly=\"true\">\n  \n                    </mat-form-field>\n                  </td>\n                  <td>\n                    <mat-form-field>\n                      <mat-label>Amount</mat-label>\n                      <input matInput placeholder=\"amount\"  autocomplete=\"off\" readonly=\"true\">\n  \n                    </mat-form-field>\n                  </td>\n                  <td>\n                    <mat-form-field>\n                      <mat-label>Amount</mat-label>\n                      <input matInput placeholder=\"amount\"  autocomplete=\"off\" readonly=\"true\">\n  \n                    </mat-form-field>\n                  </td>\n                  <td>\n                     <i fa-solid fa-pencil></i>\n                  </td>\n                  <td>\n                    <input type=\"checkbox\" name=\"\" id=\"\">\n                  </td>\n              </tr>\n        </tbody>\n     </table>\n   </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport * as XLSX from 'xlsx';\nimport { SharedService } from '../shared.service';\ntype AA=any[][];\n@Component({\n  selector: 'app-excel-upload',\n  templateUrl: './excel-upload.component.html',\n  styleUrls: ['./excel-upload.component.scss']\n})\n\nexport class ExcelUploadComponent implements OnInit {\n  data:any;\n  tableData: any;\n  tableTitle: string[];\n  tableRecords: any;\n\n  constructor(private shared:SharedService) { }\n  @ViewChild('labelImport')  labelImport: ElementRef;\n  name:any\n  ngOnInit(): void {\n    this.name=this.shared.emp.value\n    alert(this.name)\n  }\n  images:any\n  uploadForms:FormGroup;\n//   fileChange(file, files:FileList) {\n//     const target: DataTransfer = <DataTransfer>(<unknown>file.target);\n//     const filess:FileList=file.target.files\n//     this.labelImport.nativeElement.innerText = Array.from(filess)\n//     .map(f => f.name)\n//     .join(', ');\n//     this.images = file.target.files;\n  \n\n//     const reader: FileReader = new FileReader();\n//     reader.readAsBinaryString(this.images[0]);\n//     reader.onload = (e: any) => {\n//       /* read workbook */\n//       const bstr: string = e.target.result;\n//       const wb = XLSX.read(bstr, { type: 'binary' });\n//       // const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n\n//       /* grab first sheet */\n//       const wsname: string = wb.SheetNames[0];\n//       const ws = wb.Sheets[wsname];\n//       // const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n//       /* save data */\n//       this.data =(XLSX.utils.sheet_to_json(ws, { header: 1 }));\n//       console.log(this.data);\n//     console.log('Images',this.images)\n//     this.tableData = this.data;\n//       this.tableTitle = Object.keys(this.tableData[0]);\n//       this.tableRecords = this.tableData.slice(\n//         this.pageStartCount,\n//         this.pageEndCount\n//       );\n      \n//   }\n\n// }\nfileChange(file, files:FileList) {\n  const read=new FileReader()\n  read.readAsBinaryString(file.target.files[0])\n  read.onload=(e)=>{\n    const blob=e.target.result\n    const BlobRead=XLSX.read(blob,{type:'binary'})\n    const SheetNames=BlobRead.SheetNames[0]\n    const Sheets=BlobRead.Sheets[SheetNames]\n    this.data=XLSX.utils.sheet_to_json(Sheets,{header:1})\n\n  }\n  this.labelImport.nativeElement.innerText=Array.from(files).map(f=>f.name)\n}\n  pageEndCount(pageStartCount: (pageStartCount: any, pageEndCount: any) => any, pageEndCount: any): any {\n    throw new Error('Method not implemented.');\n  }\n  pageStartCount(pageStartCount: any, pageEndCount: any): any {\n    throw new Error('Method not implemented.');\n  }\n}\n","<div>{{name}}</div>\n\n<div>\n    <div class=\"card\">\n        <div class=\"card-body\">\n          <form novalidate [formGroup]=\"uploadForms\">\n            <div class=\"input-group mb-3\">\n              <div class=\"custom-file\">\n                <input type=\"file\" class=\"custom-file-input\" formControlName=\"files\" id=\"importFile\"\n                  (change)=\"fileChange($event, $event.target.files)\">\n                <label class=\"custom-file-label\" #labelImport for=\"importFile\">Choose file</label>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button class=\"btn btn-warning\" type=\"button\" >\n                <i class=\"fas fa-file-import\"></i> Upload\n              </button>\n              <button class=\"btn btn-outline-info\" type=\"button\"  style=\"margin-left: 4%;\">\n                Cancel\n              </button>\n              <button class=\"btn btn-outline-info\" type=\"button\"  style=\"    margin-left:35%;\">\n                Download Template\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n</div>\n<!-- <table cellspacing=\"0\" cellpadding=\"0\">\n    <tr>\n      <th *ngFor=\"let header of tableTitle\">{{ header }}</th>\n    </tr>\n    <tr *ngFor=\"let data of tableRecords; let i = index\">\n      <td *ngFor=\"let header of tableTitle\">\n        {{ data[header] }}\n      </td>\n    </tr>\n  </table> -->\n  <table class=\"table table-bordered align-center\">\n    <tr *ngFor=\"let d of data\">\n        <td *ngFor=\"let f of d\">\n            {{f}}\n        </td>\n    </tr>\n\n  </table>","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport {switchMap} from 'rxjs/operators'\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-frame',\n  templateUrl: './frame.component.html',\n  styleUrls: ['./frame.component.scss']\n})\nexport class FrameComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // this.autocomplete.valueChanges.pipe(switchMap(value=>))\n    const emp=interval(1000)\n    \n  }\n  autocomplete=new FormControl('')\n  Dropdown=[{id:1,name:'subash'},{id:2,name:'Rahul'},{id:3,name:'Mahesh'},{id:4,name:'Anand'}]\n  ChipDropdown=['Ramesh']\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  RemoveChip=[]\n  Option(event:MatAutocompleteSelectedEvent){\n    const drop=event.option.value.name\n    const FoundDropdown=this.Dropdown.filter(name=>name.name==drop)\n    const FoundChipdown=this.ChipDropdown.filter(name=>name==drop)\n    if(FoundChipdown.length){\n      return\n    }\n    if(FoundDropdown.length){\n      this.ChipDropdown.push(drop)\n    }\n\n    console.log('Drop',drop)\n    \n  }\n  remove(chip){\n    this.RemoveChip.push(chip)\n    let index=this.ChipDropdown.indexOf(chip)\n    \n    this.ChipDropdown.splice(index,1)\n   \n\n  }\n  public displayW(id){\n    // return id?id.name:undefined\n  }\n}\n","<!-- <iframe autoplay src=\"https://www.youtube.com/embed/6bg5tM2jmUU?autoplay=1&loop=1&mute=1&controls=0\" [frameBorder]=\"0\" allowFullscreen></iframe> -->\n<!-- <video  >\n    <source src=\"./assets/TOXIC_Rocking_Star_Yash_Geetu_Mohandas_KVN_Productions__6bg5tM2jmUU_247.webm\" type=\"video/webm\">\n</video> -->\n<!-- <iframe  src=\" \" [frameBorder]=\"0\"></iframe> -->\n<!-- <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d255747.55411418498!2d80.04381089666022!3d13.049472126023629!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3a5265ea4f7d3361%3A0x6e61a70b6863d433!2sChennai%2C%20Tamil%20Nadu!5e0!3m2!1sen!2sin!4v1702732323695!5m2!1sen!2sin\" width=\"600\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe> -->\n<!-- <div class=\"movie\">\n    <h1 class=\"text-white\">Movie</h1>\n    <p class=\"text-white\" style=\"width: 400px;\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Vel illum maiores quo totam et. Odit ea aspernatur corporis fugiat impedit quam atque facilis debitis nam cum beatae consectetur, animi cupiditate?</p>\n</div> -->\n<mat-form-field appearance=\"outline\">\n    <mat-chip-list #chiplist>\n        <mat-chip *ngFor=\"let chip of ChipDropdown\" (removed)=\"remove(chip)\" [selectable]=\"true\" [removable]=\"true\">\n            {{chip}}\n            <mat-icon matChipRemove>remove</mat-icon>\n        </mat-chip>\n        <input matInput [matAutocomplete]=\"auto\" [formControl]=\"autocomplete\" [matChipInputFor]=\"chiplist\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\">\n    </mat-chip-list>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"Option($event)\" [displayWith]=\"displayW\">\n        <mat-option *ngFor=\"let data of Dropdown\" [value]=\"data\">\n            {{data.name}}\n        </mat-option>\n    </mat-autocomplete>\n</mat-form-field>\n<div >\n    <h2>Removed List</h2>\n    <div class=\"Remove\" *ngFor=\"let data of RemoveChip\">\n        <div>{{data}}</div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { SharedService } from '../shared.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-grade',\n  templateUrl: './grade.component.html',\n  styleUrls: ['./grade.component.scss']\n})\nexport class GradeComponent implements OnInit {\n\n  constructor(private shared:SharedService,private router:Router) { }\n  Name=new FormControl('')\n\n  ngOnInit(): void {\n  }\n  add(){\n    this.shared.emp.next(this.Name.value)\n    this.router.navigate(['/excel'])\n    // this.dkkd()\n  }\n  dkkd(){\n   alert(this.shared.emp.value)\n  }\n\n}\n","<!-- <p>grade works!</p> -->\n<mat-form-field>\n    <input type=\"text\" matInput [formControl]=\"Name\">\n</mat-form-field>\n<button (click)=\"add()\">Add</button>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mapping',\n  templateUrl: './mapping.component.html',\n  styleUrls: ['./mapping.component.scss']\n})\nexport class MappingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n@Component({\n  selector: 'app-month-payroll-report',\n  templateUrl: './month-payroll-report.component.html',\n  styleUrls: ['./month-payroll-report.component.scss']\n})\nexport class MonthPayrollReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  startDate = new Date(1990, 0, 1);\n  DateFormgroup=new FormGroup({\n    DatePicker:new FormControl('')\n  })\n  data=[\n    {name:'subash',age:20,Place:'London',Pincode:612662},\n    {name:'ramesh',age:22,Place:'America',Pincode:612663},\n    {name:'aravinth',age:20,Place:'India',Pincode:612632},\n    {name:'ravi',age:25,Place:'antartica',Pincode:612662},\n  ]\n\n}\n","<div class=\"container mt-5\">\n    <!-- <p>dkdkdk</p> -->\n    <div>\n        <form action=\"\" [formGroup]=\"DateFormgroup\">\n            \n        <!-- <mat-form-field dateFormat2 class=\"smallinput spacingForm\" style=\"margin-top: -2%;\">\n            <mat-label> Month </mat-label>\n            <input matInput [matDatepicker]=\"dp\" [formControl]=\"monyear\" placeholder=\"Month and Year\"\n              formControlName=\"monthyear\" />\n            <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\n            <mat-datepicker #dp startView=\"multi-year\" (yearSelected)=\"chosenYearHandler($event)\"\n              (monthSelected)=\"chosenMonthHandler($event, dp)\" panelClass=\"example-month-picker\">\n            </mat-datepicker>\n          </mat-form-field> -->\n          <mat-form-field>\n            <mat-label>Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\n            <mat-datepicker-toggle class=\"toggle\" matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\n          </mat-form-field>\n        </form>\n    </div>\n    <div class=\"mt-5\">\n        <table class=\"table table-dark border text-center\">\n            <tbody>\n                <tr *ngFor=\"let d of data\" style=\"height: 80px;\">\n                    <td class=\"border padding\" >{{d.name}}</td>\n                    <td class=\"border padding\">{{d.age}}</td>\n                    <td class=\"border padding\">{{d.Place}}</td>\n                    <td class=\"border padding\">{{d.Pincode}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginServiceService } from '../services/login-service.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { strict } from 'assert';\n// import { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n id:number\n  constructor(private login:LoginServiceService,) { }\n  user=new FormGroup({\n    name:new FormControl('',[Validators.required]),\n    component_type:new FormControl('',[Validators.required]),\n    type:new FormControl('',[Validators.required]),\n    percentage:new FormControl('',[Validators.required]),\n    // id:new FormControl()\n  })\n  editUser=new FormGroup({\n    name:new FormControl('',[Validators.required]),\n    component_type:new FormControl('',[Validators.required]),\n    type:new FormControl('',[Validators.required]),\n    percentage:new FormControl('',[Validators.required]),\n    id:new FormControl('')\n    \n  })\n  SegmentName=new FormControl('')\n  // url=\"http://139.59.32.22:8188/\"\nlist:any\n  ngOnInit(): void {\n   this.segment();\n  this.component();\n  this.type()\n  // this.submit()\n  // this.SegmentNameFun()\n  }\n  segmentMaster:boolean=false\n  segmentAdd:boolean=false\n  SegmentEdit:boolean=false\n  add(){\n    this.segmentMaster=false\n    this.segmentAdd=true\n    this.SegmentEdit=false\n  }\n  segment(){\n    this.segmentMaster=true\n    this.segmentAdd=false\n    this.SegmentEdit=false\n    this.login.Valueget().subscribe(data=>{\n      sessionStorage.setItem('data',JSON.stringify(data))\n     \n    })\n    const l=JSON.parse(sessionStorage.getItem('data'))\n    // console.log(this.list)\n    this.list=l['data']\n    console.log(this.list)\n  }\n  cancel(){\n    this.segmentMaster=true\n    this.segmentAdd=false\n    this.SegmentEdit=false\n  }\n  submit(){\n    this.segmentMaster=true\n    this.segmentAdd=false\n    this.login.Valuepost(this.user.value).subscribe(data=>{\n      console.log(data)\n    })\n  }\n  l:any\n  update(){\n    // this.id=JSON.parse(sessionStorage.getItem('data'))['data'].id\n    this.segmentMaster=true\n    this.SegmentEdit=false\n    this.login.update(this.editUser.value).subscribe(data=>{\n    })\n   \n  }\n  edit(index){\n    // this.l=i\n    // const l=JSON.parse(sessionStorage.getItem('data'))\n    // let s=l['data']\n    this.login.edit(index.id).subscribe(data=>{\n      console.log(data)\n\n    })\n       this.editUser.patchValue({\n       \n        name:index.name,\n        component_type:index.component_type.id,\n        type:index.type.id,\n        percentage:index.percentage,\n        id: index.id\n    })\n    this.segmentMaster=false\n    this.SegmentEdit=true\n  }\n  // edit(index:any,i:any){\n  //   this.segmentMaster=false\n  //   this.SegmentEdit=true\n  //   this.editUser.patchValue({\n  //     id:index.id,\n  //     name:index.name,\n  //     component_type:index.component_type.id,\n  //     type:index.type.id,\n  //     percentage:index.percentage,\n  //   })\n  //   console.log(this.list[i].id)\n  // }\n  delete(index){\n    \n    this.login.delete(index).subscribe(data=>{\n      this.segment();\n    })\n  }\n  componentType:any\n  types:any\n  type(){\n    this.login.type().subscribe(data=>{\n      this.types=data['data']\n    })\n  }\n  component(){\n    // const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    // const headers={'Authorization':'Token '+token}\n    // this.http.get(this.url+'mstserv/payroll_component?name=',this.user.controls.component_type.value).subscribe(data=>{\n    //   this.componentType=data\n    // })\n    this.login.component().subscribe(data=>{\n      this.componentType=data['data']\n      console.log(this.componentType)\n    })\n  }\n  // SegmentName:string\n  SegmentNameFun(){\n    // if(this.list.name){\n    //   //  this.SegmentName='&querry='+this.list.name\n    //   let page=1\n     \n    // }\n    // if(this.SegmentName){\n      this.login.SegmentName(this.SegmentName.value).subscribe(data=>{\n        console.log('SegmentName',data)\n        this.list=data['data']\n        console.log('list',this.list.name)\n      })\n    // }\n\n   \n  }\n  clear(){\n    this.SegmentName.reset()\n    this.segment()\n   }\n  payType=['Basic','Allowance','BONUS','Deduction','salary','other earning']\n  bonusType=['QUARTERLY','HALFYEARLY','YEARLY','MONTHLY','CUSTOM']\n}\n","<div class=\"main\">\n    <div class=\"left\">\n    </div>\n    <div class=\"right\">\n        <div class=\"navbar-center navbar-light navbar-expand head\">\n            <ul class=\" navbar-nav ml-auto d-flex\">\n              <li class=\"nav-item\"><a class=\"nav-link\" >Mapping</a></li>\n              <li class=\"nav-item\"><a class=\"nav-link\" (click)=\"segment()\" style=\"cursor:pointer\">Segment</a></li>\n              <li class=\"nav-item\"><a class=\"nav-link\" >Grade</a></li>\n            </ul> \n            <!-- <app-segment-master></app-segment-master>\n            <app-segment-add></app-segment-add> -->\n          </div>\n          <div *ngIf=\"segmentMaster\">\n            <h1>Segment Master</h1>\n            <div class=\"slide\">\n                <div class=\"segment\">\n                    <mat-form-field appearance=\"outline\" class=\"\">\n                        <mat-label>Segment Name</mat-label>\n                        <input matInput class=\"segment\" [formControl]=\"SegmentName\">\n                    </mat-form-field>\n                </div>\n                <div class=\"card search click\" (click)=\"SegmentNameFun()\">\n                    <mat-icon>search</mat-icon>\n                </div>\n                <div class=\"clear\">\n                    <button class=\"btn card click\" (click)=\"clear()\">clear</button>\n                </div>\n                <div class=\"add\" (click)=\"add()\"> <mat-icon>add</mat-icon></div>\n            </div>\n            <div>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>S.no</th>\n                            <th>Segment Name</th>\n                            <th>Component Type</th>\n                            <th>Type</th>\n                            <th>Percentage</th>\n                            <th>Edit</th>\n                            <th>Delete</th>\n                        </tr>\n                        \n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let l of list;let i=index\">\n                            <td>{{i+1}}</td>\n                            <td>{{l?.name}}</td>\n                            <td>{{l?.component_type?.name}}</td>\n                            <td>{{l?.type.name}}</td>\n                            <td>{{l?.percentage}}</td>\n                            <td (click)=\"edit(l)\"><mat-icon style=\"cursor:pointer\" >edit</mat-icon></td>\n                            <td (click)=\"delete(l.id)\"><mat-icon style=\"cursor:pointer\">delete</mat-icon></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n          </div>\n          <div class=\"col-12\" *ngIf=\"segmentAdd\">\n            <h1>Segment Add</h1>\n            <form action=\"\" [formGroup]=\"user\">\n                <div class=\"display\">\n                    <div class=\"\">\n                        <label for=\"\">Name</label>\n                        <input type=\"text\" class=\"form-control height\" formControlName=\"name\">\n                    </div>\n                    <div class=\"\">\n                        <label for=\"pay.id\" class=\"d-block\">Pay Component Type</label>\n                        <mat-form-field appearance=\"outline\" class=\"option\" >\n                            <mat-select formControlName=\"component_type\">\n                                <mat-option *ngFor=\"let pay of componentType\" [value]=\"pay.id\">{{pay.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"\">\n                        <label for=\"\" class=\"d-block\">Bonus Type</label>\n                        <mat-form-field appearance=\"outline\" class=\"option\" >\n                            <mat-select formControlName=\"type\">\n                                <mat-option *ngFor=\"let bonus of types\" [value]=\"bonus.id\">{{bonus.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"\">\n                        <label for=\"\">Percentage</label>\n                        <input type=\"text\" class=\"form-control height\" formControlName=\"percentage\">\n                    </div>\n                </div>\n                \n            </form>\n            <div class=\"display\">\n                <button class=\"btn btn-light\" (click)=\"cancel()\">Cancel</button>\n                <button class=\"btn btn-light\" (click)=\"submit()\" [disabled]=\"!user.valid\">Submit</button>\n            </div>\n          </div>\n          <div *ngIf=\"SegmentEdit\">\n            <h1>Segment Edit</h1>\n            <form action=\"\" [formGroup]=\"editUser\">\n                <div class=\"display\">\n                    <div class=\"\">\n                        <label for=\"\">Name</label>\n                        <input type=\"text\" class=\"form-control height\" formControlName=\"name\">\n                    </div>\n                    <div class=\"\">\n                        <label  class=\"d-block\">Pay Component Type</label>\n                        <mat-form-field appearance=\"outline\" class=\"option\" >\n                            <mat-select formControlName=\"component_type\">\n                                <mat-option *ngFor=\"let pay of componentType\" [value]=\"pay.id\">{{pay.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"\">\n                        <label for=\"\" class=\"d-block\">Bonus Type</label>\n                        <mat-form-field appearance=\"outline\" class=\"option\" >\n                            <mat-select formControlName=\"type\">\n                                <mat-option *ngFor=\"let bonus of types\" [value]=\"bonus.id\">{{bonus.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"\">\n                        <label for=\"\">Percentage</label>\n                        <input type=\"text\" class=\"form-control height\" formControlName=\"percentage\">\n                    </div>\n                </div>\n                \n            </form>\n            <div class=\"display\">\n                <button class=\"btn btn-light\" (click)=\"cancel()\">Cancel</button>\n                <button class=\"btn btn-light\" (click)=\"update()\" [disabled]=\"!editUser.valid\">Update</button>\n            </div>\n          </div>\n    </div>\n    \n    \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ng-class',\n  templateUrl: './ng-class.component.html',\n  styleUrls: ['./ng-class.component.scss']\n})\nexport class NgClassComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photos-shower',\n  templateUrl: './photos-shower.component.html',\n  styleUrls: ['./photos-shower.component.scss']\n})\nexport class PhotosShowerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  data:any='../../assets/wallpaper1.jpeg'\n  List=['/assets/wallpaper1.jpeg','/assets/wallpaper2.jpeg','/assets/wallpaper3.jpeg','/assets/wallpaper4.jpeg','/assets/wallpaper5.jpeg','/assets/wallpaper6.jpeg','/assets/wallpaper7.jpeg','/assets/wallpaper8.jpeg','/assets/wallpaper9.jpeg','/assets/wallpaper10.jpeg','/assets/wallpaper11.jpeg','/assets/wallpaper12.jpeg','/assets/wallpaper13.jpeg','/assets/wallpaper14.jpeg']\n  Image(data){\n    this.data=data\n  }\n}\n","<div class=\"flex\">\n    <div class=\"mainPhoto\">\n        <div class=\"BigImg\" >\n            <img src='{{data}}' alt=\"\">\n        </div>\n    </div>\n    <div class=\"ScrollBar\" >\n        <div *ngFor=\"let data of List\">\n            <div class=\"Img\" (click)=\"Image(data)\">\n                <img src='{{data}}' alt=\"\">\n            </div>\n        </div>\n       \n    </div>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-region-master',\n  templateUrl: './region-master.component.html',\n  styleUrls: ['./region-master.component.scss']\n})\nexport class RegionMasterComponent implements OnInit {\n\n  @ViewChild('labelImport')  labelImport: ElementRef;\n  isFileUpload: boolean=false;\n  images: File;\n  Action='payrollmaster_reportcolumns_upload';\nuploadForms: FormGroup;\n\n  constructor( ) { }\n  Searchform=true\n  Createform=false\n  Editform=false\n  Summarytable=true\n  SummaryData:any\n  DropdownData:any\n  pagination={\n    has_previous:false,\n    has_next:false,\n    index:1\n\n  }\n  ngOnInit(): void {\n    this.Summary(this.pagination.index)\n    this.dropdown()\n  }\n\n  NameSearch=new FormControl('')\n  CreateForm=new FormGroup({\n    name:new FormControl('',[Validators.required]),\n    type:new FormControl('',[Validators.required])\n  })\n  EditForm=new FormGroup({\n    name:new FormControl('',[Validators.required]),\n    type:new FormControl('',[Validators.required]),\n    id:new FormControl('')\n  })\n  Add(){\n    this.Searchform=false\n  this.Createform=true\n  // this.Editform=false\n  this.Summarytable=false\n  }\n  edit(i){\n    this.Searchform=false\n    // this.Createform=true\n    this.Editform=true\n    this.Summarytable=false\n    // let id=this.EditForm.get('id').value\n    // this.service.reportEditSummary(i).subscribe(data=>{\n    //   this.EditForm.patchValue({\n    //     name:data.name,\n    //     type:data.type.id,\n    //     id:data.id\n    //   })\n    // })\n    this.Search()\n  }\n  cancel(){\n    this.Searchform=true\n    this.Createform=false\n    this.Editform=false\n    this.Summarytable=true\n    this.CreateForm.reset();\n    this.EditForm.reset();\n  }\n  submit(){\n    if(this.CreateForm.value.name=='' || this.CreateForm.value.name==null){\n      // this.notification.showError('Please Enter Name')\n    }\n    else if(this.CreateForm.value.type=='' || this.CreateForm.value.type==null){\n      // this.notification.showError('Please Select Type')\n    }\n    else{\n      // this.service.reportSubmit(this.CreateForm.value).subscribe(data=>{\n      //   if(data.status=='success'){\n      //     this.notification.showSuccess('Successfully Created')\n      //     this.Searchform=true\n      //     this.Createform=false\n      //     this.Editform=false\n      //     this.Summarytable=true\n      //     this.Search()\n      //     this.CreateForm.reset();\n          \n      //   }\n      //   else if(data.name_message){\n      //     this.notification.showError(data.name_message)\n      //   }\n      // })\n    }\n  \n \n  }\n  prevpage(){\n    if(this.pagination.has_previous){\n      this.pagination.index=this.pagination.index-1\n    }\n    this.Summary(this.pagination.index)\n\n  }\n  nextpage(){\n    if(this.pagination.has_next){\n      this.pagination.index=this.pagination.index+1\n    }\n    this.Summary(this.pagination.index)\n  }\n  update(){\n    if(this.EditForm.value.name=='' || this.EditForm.value.name==null){\n      // this.notification.showError('Please Enter Name')\n    }\n    else if(this.EditForm.value.type=='' || this.EditForm.value.type==null){\n      // this.notification.showError('Please Select Type')\n    }\n    else{\n      // this.service.reportSubmit(this.EditForm.value).subscribe(data=>{\n      //   if(data.status=='success'){\n      //     this.notification.showSuccess('Successfully Updated')\n      //     this.Searchform=true\n      //     this.Createform=false\n      //     this.Editform=false\n      //     this.Summarytable=true\n      //     this.Search()\n      //     this.EditForm.reset();\n      //   }\n      //   else if(data.name_message){\n      //     this.notification.showError(data.name_message)\n      //   }\n      // })\n    }\n   \n    \n  }\n  Search(){\n    // this.service.reportSummary(this.NameSearch.value,this.pagination.index).subscribe(data=>{\n    //   this.SummaryData=data['data']\n    // })\n  }\n  Summary(page){\n    // this.service.reportSummary(this.NameSearch.value,page).subscribe(data=>{\n    //   this.SummaryData=data['data']\n    // })\n  }\n  delete(i){\n    // this.service.reportDeleteSummary(i).subscribe(data=>{\n    //   if(data.status=='success'){\n    //     this.notification.showSuccess('Successfully Deleted')\n    //     this.Search()\n    //   }\n    // })\n   \n    \n  }\n  clear(){\n    this.NameSearch.reset();\n    this.Search()\n  }\n  dropdown(){\n    // this.service.reportDropdown().subscribe(data=>{\n    //   this.DropdownData=data['data']\n    // })\n  }  \n  fileChange(file, files:FileList) {\n    this.labelImport.nativeElement.innerText = Array.from(files)\n    .map(f => f.name)\n    .join(', ');\n    this.images = <File>file.target.files[0];\n  }\n  uploadfile()\n  {\n    this.isFileUpload = true;\n    this.Searchform=false\n    this.Createform=false\n    this.Editform=false\n    this.Summarytable=false\n\n  }\n  uploadDocuments(){\n    // this.service.MasterUpload(this.Action,this.images).subscribe(data=>{\n    //   this.notification.showSuccess(data.message)\n    // })\n  }\n  downloadTemplate()\n  {\n    const download='payrollmaster_reportcolumns_upload'\n    // this.service.MasterUploadDownload(download,1).subscribe(data=>{\n    //   let binaryData = [];\n    //   binaryData.push(data)\n    //   let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\n    //   let link = document.createElement('a');\n    //   link.href = downloadUrl;\n    //   link.download = \"payrollmaster_reportcolumns_upload\" + \".xlsx\";\n    //   link.click();\n    // })\n  }\n  cancelupload(){\n    this.Searchform=true\n    this.Createform=false\n    this.Editform=false\n    this.Summarytable=true\n    this.isFileUpload=false\n  }\n}\n","<div class=\"pl-5 mt-5 container\">\n    <div *ngIf=\"Searchform\">\n        <h2 class=\"ReportColumns\">Region Master</h2>\n        <div class=\"row col-md-10\">\n            <div class=\"col-3 display pad\">\n                <form action=\"\">\n                <mat-form-field >\n                    <mat-label>Name</mat-label>\n                    <input  matInput [formControl]=\"NameSearch\">\n                </mat-form-field>\n            </form>\n            </div>\n            <div class=\" row col-5 display\">\n                <div class=\"col-2\">\n                    <button mat-stroked-button type=\"button\" class=\"button\"\n                aria-label=\"Search\"\n                (click)=\"Search()\">\n                <mat-icon>search</mat-icon>\n            </button>\n                </div>\n                <div class=\"col-2\">\n                    <button mat-stroked-button type=\"button\"  class=\"clear\" (click)=\"clear()\">Clear</button>\n                </div>\n                <div class=\"col-6\">\n                    <!-- <button type=\"button\" class=\"add\"> -->\n                        <!-- <i class=\"fa-solid fa-plus-circle\" style=\"color: #0259ed;font-size:32px;cursor:pointer\" matTooltip=\"Add\" (click)=\"Add()\"></i> -->\n                        <button type=\"button\" class=\"add\" mat-fab>\n                            <mat-icon matTooltip=\"Add\" (click)=\"Add()\" style=\"color: black;\">add</mat-icon>\n                        </button>\n                    <!-- </button> -->\n            \n                        <!-- <button type=\"button\" id=\"add\" mat-fab \n                        (click)=\"uploadfile()\">\n                        <mat-icon matTooltip=\"Upload\" style=\"color: black;\">arrow_upward</mat-icon>\n                    </button> -->\n                </div>\n                \n            \n\n      \n\n            </div>\n            <div class=\"col-3\">\n                \n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"Createform\">\n        <form [formGroup]=\"CreateForm\">\n            <h2 class=\"ReportColumns\">Region Master Add</h2>\n            <!-- <mat-form-field> -->\n                <div class=\"col-12 row\">\n                    <div class=\"col-6 row\">\n                        <div class=\"col-6\">\n                            <!-- <div class=\"form-group\"> -->\n                                <label>Name</label><br>\n                            <mat-form-field>\n                                <input type=\"text\" matInput formControlName=\"name\">\n                            </mat-form-field>\n                               \n                            <!-- </div> -->\n                        </div>\n                        <div class=\"col-6\">\n                            <!-- <div class=\"form-group\"> -->\n                            <label>Type</label><br>\n                            <mat-form-field>\n                                <!-- <select name=\"\" id=\"\" formControlName=\"Dropdown\" class=\"form-control pr-1\" >\n                                    <option value=\"\">a</option>\n                                    <option value=\"\">B</option>\n                                    <option value=\"\">C</option>\n                                </select> -->\n                                <mat-select formControlName=\"type\">\n                                    <mat-option *ngFor=\"let data of DropdownData\" [value]=\"data.id\">\n                                        {{data.type}}\n                                    </mat-option>\n                                    \n                                </mat-select>\n                            </mat-form-field>\n                               \n                            <!-- </div> -->\n                        </div>\n                      \n                        \n                    </div>\n               \n            </div>\n            <div class=\"ml-3 mt-3\">\n                <button class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\n                <button class=\"btn btn-primary ml-2\" (click)=\"submit()\" [disabled]=\"!CreateForm.valid\">Submit</button>\n            </div>    \n            <!-- </mat-form-field> -->\n        </form>\n    </div>\n    <div *ngIf=\"Editform\">\n        <form [formGroup]=\"EditForm\">\n            <h2 class=\"ReportColumns\">Region Master Edit</h2>\n            <!-- <mat-form-field> -->\n                <div class=\"col-12 row\">\n                    <div class=\"col-6 row\">\n                        <div class=\"col-6\">\n                            <!-- <div class=\"form-group\"> -->\n                                <label>Name</label><br>\n                            <mat-form-field>\n                                <input type=\"text\" matInput formControlName=\"name\">\n                            </mat-form-field>\n                               \n                            <!-- </div> -->\n                        </div>\n                        <div class=\"col-6\">\n                            <!-- <div class=\"form-group\"> -->\n                            <label>Type</label><br>\n                            <mat-form-field>\n                                <!-- <select name=\"\" id=\"\" formControlName=\"Dropdown\" class=\"form-control pr-1\" >\n                                    <option value=\"\">a</option>\n                                    <option value=\"\">B</option>\n                                    <option value=\"\">C</option>\n                                </select> -->\n                                <mat-select formControlName=\"type\">\n                                    <mat-option *ngFor=\"let data of DropdownData\" [value]=\"data.id\">\n                                        {{data.type}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                               \n                            <!-- </div> -->\n                        </div>\n                      \n                        \n                    </div>\n               \n            </div>\n            <div class=\"ml-3 mt-3\">\n                <button class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\n                <button class=\"btn btn-primary ml-2\" (click)=\"update()\" [disabled]=\"!EditForm.valid\">Update</button>\n            </div>\n                \n            <!-- </mat-form-field> -->\n        </form>\n    </div>\n    <div class=\"padTable\" *ngIf=\"Summarytable\">\n        <div class=\"table-responsive\" style=\"width: 600px;\">\n            <table class=\"table border text-center\">\n                <thead class=\"border\">\n                    <th class=\"border text-center\">Name</th>\n                    <th class=\"border text-center\">Type</th>\n                    <th class=\"border width text-center\">Edit</th>\n                    <th class=\"border width text-center\">Delete</th>\n                </thead>\n                <tbody class=\"border\">\n                    <tr  *ngFor=\"let data of SummaryData; let i=index\">\n                        <td class=\"border text-center\">{{data.name}}</td>\n                        <td class=\"border text-center\">{{data.type.type}}</td>\n                        <td class=\"border width text-center\"><i class=\"fa-solid fa-pencil\" (click)=\"edit(data.id)\"></i></td>\n                        <td class=\"border width text-center\"><i class=\"fa-solid fa-trash-can\" (click)=\"delete(data.id)\"></i></td>\n                    </tr>\n                   \n                </tbody>\n            </table>\n            <div class=\"col-sm-12\" style=\"font-size: small;text-align: right;margin-bottom: 5%;\">\n                <button type=\"button\" (click)=\"prevpage()\" mat-icon-button [disabled]=\"pagination.has_previous === false\"\n                    color=\"primary\" >\n                    <mat-icon>arrow_back</mat-icon>\n                </button> \n                {{pagination.index}}\n                <button type=\"button\" (click)=\"nextpage()\" mat-icon-button color=\"primary\" [disabled]=\"pagination.has_next === false\"\n                    >\n                    <mat-icon>arrow_forward</mat-icon>\n                </button>\n            </div>\n        </div>\n        \n    </div>\n\n</div>\n<!-- <div *ngIf=\"isFileUpload\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n          <form novalidate [formGroup]=\"uploadForms\">\n            <div class=\"input-group mb-3\">\n              <div class=\"custom-file\">\n                <input type=\"file\" class=\"custom-file-input\" formControlName=\"files\" id=\"importFile\"\n                  (change)=\"fileChange($event, $event.target.files)\">\n                <label class=\"custom-file-label\" #labelImport for=\"importFile\">Choose file</label>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button class=\"btn btn-warning\" type=\"button\" (click)=\"uploadDocuments()\">\n                <i class=\"fas fa-file-import\"></i> Upload\n              </button>\n              <button class=\"btn btn-outline-info\" type=\"button\" (click)=\"cancelupload()\" style=\"margin-left: 4%;\">\n                Cancel\n              </button>\n              <button class=\"btn btn-outline-info\" type=\"button\" (click)=\"downloadTemplate()\" style=\"    margin-left:35%;\">\n                Download Template\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n  </div> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-segment-add',\n  templateUrl: './segment-add.component.html',\n  styleUrls: ['./segment-add.component.scss']\n})\nexport class SegmentAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>segment-add works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-segment-master',\n  templateUrl: './segment-master.component.html',\n  styleUrls: ['./segment-master.component.scss']\n})\nexport class SegmentMasterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Segment Master</h1>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from 'rxjs'\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n  constructor(private http:HttpClient) { }\n  url=\"http://139.59.32.22:8188/\"\n  post(form):Observable<any>{\n    return this.http.post(this.url+'usrserv/auth_token',form)\n  }\n  Valueget():Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.get(this.url+'mstserv/create_segmentmaster',{'headers':headers})\n  }\n  Valuepost(form):Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.post(this.url+'mstserv/create_segmentmaster',form,{'headers':headers})\n  }\n  component():Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.get(this.url+'mstserv/create_componenttype',{'headers':headers})\n  }\n  type():Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.get(this.url+'mstserv/payrolldeduction_type_dropdown',{'headers':headers})\n  }\n  delete(form):Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.delete(this.url+'mstserv/segment_get/'+form,{'headers':headers})\n  }\n  edit(form){\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.get(this.url+'mstserv/segment_get/'+form,{'headers':headers})\n  }\n  update(form):Observable<any>{\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    // const ses=JSON.parse(sessionStorage.getItem('data'))\n    // const session=ses['data'].id\n    return this.http.post(this.url+`mstserv/create_segmentmaster`,form,{'headers':headers})\n  }\n  SegmentName(form){\n    const token=JSON.parse(sessionStorage.getItem('UserLogin')).token\n    const headers={'Authorization':'Token '+token}\n    return this.http.get(this.url+'mstserv/create_segmentmaster?name='+form+'&page=1',{'headers':headers})\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  constructor() { }\n  public emp=new BehaviorSubject('')\n  get(){\n    return this.emp\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n  list=[]\n  i:number\n\n  ngOnInit(): void {\n    console.log(this.list)\n  }\n  TestGroup=new FormGroup({\n    Name:new FormControl('',[Validators.required]),\n    Age:new FormControl('',[Validators.required]),\n    Place:new FormControl('',[Validators.required]),\n    Work:new FormControl('',[Validators.required])\n\n  })\n  Submit(){\n    console.log(\"Submit\",this.TestGroup.value)\n    this.list.push(this.TestGroup.value)\n    this.TestGroup.reset()\n  }\n  update(){\n    this.list[this.i]=this.TestGroup.value\n    this.TestGroup.reset()\n  }\n  Edit(i,l){\n    this.i=l\n    console.log('i',i)\n    this.TestGroup.patchValue({\n      Name:i.Name,\n      Age:i.Age,\n      Place:i.Place,\n      Work:i.Work\n    })\n  }\n  Delete(l){\n    this.list.splice(l)\n    console.log(l)\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div class=\"h2\">Student Form</div>\n    <div class=\"card p-5\">\n\n    <form action=\"\" [formGroup]=\"TestGroup\" >\n        <div class=\"col-12 row\">\n            <div class=\"form-group col-6\">\n                <label>Name</label>\n                <input type=\"text\" formControlName=\"Name\" class=\"form-control\" placeholder=\"Name\">\n            </div>\n            <div class=\"form-group col-6\">\n                <label>Age</label>\n                <input type=\"number\" formControlName=\"Age\" class=\"form-control\" placeholder=\"Age\">\n            </div>\n        </div>\n        <div class=\"col-12 row\">\n            <div class=\"form-group col-6\">\n                <label>Place</label>\n                <input type=\"text\" formControlName=\"Place\" class=\"form-control\" placeholder=\"Place\">\n            </div>\n            <div class=\"form-group col-6\">\n                <label>Work</label>\n                <input type=\"text\" formControlName=\"Work\" class=\"form-control\" placeholder=\"Work\">\n            </div>\n        </div>\n        <div class=\"float-right mr-5 mt-2\">\n            <button class=\"btn btn-primary\" (click)=\"Submit()\" [disabled]=\"!TestGroup.valid\">Submit</button>\n            <button class=\"btn btn-danger ml-2\" (click)=\"update()\">update</button>\n        </div>\n        \n    </form>\n  \n</div>\n<table class=\"table border mt-2\">\n    <thead class=\"bg-dark text-white\">\n        <tr>\n            <th>S.No</th>\n            <th>Name</th>\n            <th>Age</th>\n            <th>Place</th>\n            <th>Work</th>\n            <th>Edit</th>\n            <th>Delete</th>\n            <!-- <th>Update</th> -->\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let l of list let i=index\">\n            <td>{{i+1}}</td>\n            <td>{{l.Name}}</td>\n            <td>{{l.Age}}</td>\n            <td>{{l.Place}}</td>\n            <td>{{l.Work}}</td>\n            <td (click)=\"Edit(l,i)\" style=\"cursor:pointer;color:green\">Edit</td>\n            <td (click)=\"Delete(i)\" style=\"cursor:pointer;color:red\">Delete</td>\n            <!-- <td (click)=\"update(i)\" style=\"cursor:pointer;color:orange\">Update</td> -->\n        </tr>\n    </tbody>\n</table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n// import { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\nimport { LoginServiceService } from '../services/login-service.service';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.scss']\n})\nexport class UserLoginComponent implements OnInit {\n\n \n\n  name=false\n  constructor(private login:LoginServiceService ,private router:Router) { }\n  output:any\n  ngOnInit(): void {\n  }\n  userlogin=new FormGroup({\n    username:new FormControl('',[Validators.required]),\n    password:new FormControl('',[Validators.required])\n  })\n  signUp(){\n    if(this.userlogin.controls.username.value=='EMP007' && this.userlogin.controls.password.value=='1234'){\n      this.login.post(this.userlogin.value).subscribe(data=>{\n        this.name=false\n        sessionStorage.setItem('UserLogin',JSON.stringify(data))\n        console.log(data)\n      })\n      this.router.navigate(['nav'])\n    }\n    else{\n      // console.log('incorrect username')\n      if(this.userlogin.controls.username.value!=='EMP007' || this.userlogin.controls.password.value!=='1234'){\n        this.output='USER NOT FOUND'\n        this.name=true\n      }\n      // else if(this.userlogin.controls.username.value!=='EMP007'){\n      //   this.output='Invalid username'\n      //   this.name=true\n      // }\n      // else if(this.userlogin.controls.password.value!=='1234'){\n      //   this.output='Invalid password'\n      //   this.name=true\n      // }\n      \n    }\n  }\n}\n","<div class=\"main\">\n    <div class=\"alert alert-warning col-2 float-right mt-5 pl-4 fix\" style=\"margin-right: 70px;\"  role=\"alert\" *ngIf=\"name\"><mat-icon>warning</mat-icon><span class=\"pl-1\">{{output}}</span></div>\n    <div class=\"container\">\n        <div class=\"card cards  col-4  border-dark\">\n            <h1 class=\"text-center mt-2 font \">LOGIN</h1>\n            <form action=\"\" [formGroup]=\"userlogin\">\n                <div class=\"form-group\">\n                    <label class=\"h5\" for=\"\">Name</label>\n                    <input type=\"text\" name=\"name\" class=\"form-control bg-none\" placeholder=\"Enter username\" formControlName=\"username\">\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"h5\" for=\"\">Password</label>\n                    <input type=\"text\" name=\"password\" class=\"form-control\" placeholder=\"Enter password\" formControlName=\"password\">\n                </div>\n                <div>\n                   <button class=\"btn btn-primary float-right mb-3\" [disabled]=\"!userlogin.valid\" (click)=\"signUp()\">Sign In</button>\n                </div>\n            </form>\n        </div>  \n        <!-- <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div> -->\n          \n    </div>\n</div>\n<!-- style=\"width: 150px; margin-top:30px;height:100px\" -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}